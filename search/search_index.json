{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":"<p>In the fast-paced world of finance, staying ahead of the curve is imperative. Algorithmic trading, or algo trading, has revolutionized the way traders operate in the markets, enabling them to execute complex strategies with speed and precision. However, for many aspiring traders, the barrier to entry into algorithmic trading has traditionally been high, often requiring advanced programming skills and intricate technical knowledge.</p> <p>But we here at Pocketful believe that breaking into algorithmic trading doesn't necessarily demand a background in programming, At Pocketful, we're reshaping the landscape of algorithmic trading by providing seamless APIs that empower traders of all skill levels to leverage the power of algorithms effortlessly.</p>"},{"location":"#prerequisites","title":"Prerequisites","text":"<p>You don't need to be a coding wizard to excel \u2013 simply follow our lead, and we'll guide you every step of the way. Whether you're a seasoned trader looking to automate your strategies or a newcomer eager to explore the possibilities, our platform empowers you to dive into algo trading with ease. </p> <p>What you need is a computer system, a good internet connection and your interest and love for trading.</p>"},{"location":"#python-sdk-for-algorithmic-trading","title":"Python SDK for Algorithmic Trading","text":"<p>We're thrilled to introduce our groundbreaking Python SDK, designed to revolutionize the way traders interact with the markets and make algorithmic trading accessible to everyone. We have added a layer of abstraction and wrapped the raw http api into python methods. You just need to call those methods and you will get the desired response. Go to the below link and start with your first step to install the pocketful python library. </p> <p>Link for python library</p> <p>Note - If you do not have python installed on your machine, please download and install it from the official website.</p> <p>Once you have completed the above step and installed pocketful python library, you can go ahead in the documentation and start your journey.</p>"},{"location":"IPO/","title":"IPO","text":""},{"location":"funds/","title":"Funds","text":""},{"location":"funds/#get-fund-details","title":"Get Fund Details","text":"<p>With the help of getFunds method, we can get the detail of funds.</p> <pre><code>res = pocket.getFunds()     # No params needs to be passed\n</code></pre>"},{"location":"funds/#response","title":"Response","text":"<pre><code>{\n    \"data\": {\n        \"client_id\": \"HI0009\",\n        \"headers\": [\n            \"Description\",\n            \"\"\n        ],\n        \"values\": [\n            [\n                \"Available\",\n                \"39.99\"\n            ],\n            [\n                \"Adhoc Deposit\",\n                \"0.00\"\n            ],\n            [\n                \"Cash Deposit\",\n                \"39.99\"\n            ],\n            [\n                \"Delivery\",\n                \"0.00\"\n            ],\n            [\n                \"DP Collateral Benefit\",\n                \"0.00\"\n            ],\n            [\n                \"DP Credit for Sale\",\n                \"0.00\"\n            ],\n            [\n                \"DP Pledge Collateral\",\n                \"0.00\"\n            ],\n            [\n                \"Manual Collateral\",\n                \"0.00\"\n            ],\n            [\n                \"Pay In\",\n                \"0.00\"\n            ],\n            [\n                \"Net Margin\",\n                \"0.00\"\n            ],\n            [\n                \"Notion Deposit\",\n                \"0.00\"\n            ],\n            [\n                \"Overdraft\",\n                \"0.00\"\n            ],\n            [\n                \"Pay out\",\n                \"0.00\"\n            ],\n            [\n                \"Pool Collateral Benefit\",\n                \"0.00\"\n            ],\n            [\n                \"Pool Pledge Collateral\",\n                \"0.00\"\n            ],\n            [\n                \"Premium\",\n                \"0.00\"\n            ],\n            [\n                \"Sar Collateral Benefit\",\n                \"0.00\"\n            ],\n            [\n                \"Sar Credit for Sale\",\n                \"0.00\"\n            ],\n            [\n                \"Span Margin\",\n                \"0.00\"\n            ],\n            [\n                \"Var Margin\",\n                \"0.00\"\n            ],\n            [\n                \"Extreme Loss Margin\",\n                \"0.00\"\n            ],\n            [\n                \"Option Credit For Sell\",\n                \"0.00\"\n            ]\n        ]\n    },\n    \"message\": \"\",\n    \"status\": \"success\"\n}\n</code></pre> Key Description data Contains client data. client_id The unique identifier of the client. headers The headers of the data table. values The values associated with the headers. Available The available balance. Adhoc Deposit The adhoc deposit amount. Cash Deposit The cash deposit amount. Delivery The delivery amount. DP Collateral Benefit The benefit from collateral in the depository. DP Credit for Sale The credit available from sale in the depository. DP Pledge Collateral The collateral pledged in the depository. Manual Collateral The manually provided collateral amount. Pay In The amount paid in. Net Margin The net margin amount. Notion Deposit The notion deposit amount. Overdraft The overdraft amount. Pay out The amount paid out. Pool Collateral Benefit The benefit from collateral in the pool. Pool Pledge Collateral The collateral pledged in the pool. Premium The premium amount. Sar Collateral Benefit The benefit from collateral in SAR (systematically important banks). Sar Credit for Sale The credit available from sale in SAR (systematically important banks). Span Margin The span margin amount. Var Margin The value at risk (VAR) margin amount. Extreme Loss Margin The extreme loss margin amount. Option Credit For Sell The credit available for selling options. message Additional information or message. status The status of the operation."},{"location":"funds/#error-response","title":"Error Response","text":"<pre><code>{\n    \"status\": \"error\",\n    \"message\": \"Request Unauthorised\",\n    \"error_code\": 40000,\n    \"data\":{\n    }\n}\n</code></pre>"},{"location":"login/","title":"Login","text":"<p>As a trader or investor, if you need to make a trade, the first step is obviously to login into your trading account; trading with api's is also the same, the first step is to login, not manually but with the api.</p> <p>Pocketful boasts a robust and secure login mechanism fortified by two-factor authentication. Initially, users submit their credentials, and the server validates them, responding with a success confirmation if they are accurate. Following this, the client is prompted to provide the Time-based One-Time Password (TOTP) for two-factor authentication. Upon successful verification of the TOTP, the server issues an access token, a crucial credential enabling seamless access to our APIs and retrieval of data.</p> <p></p> <p>You can follow the below steps to login into your pocketful account using API's.</p> <p>If you don't have a pocketful account till now,  you can register here</p> <p>To login into your Pocketful Account, you need a client Id, password and totp. Follow the below example code snippet.</p> <p>import the Pocketful library</p> <pre><code>from pocketful import pocketful\n</code></pre> <p>Store your clientId and password into a variable</p> <pre><code>pocket_client_id = \"your-client-id\"\npocket_password = \"your-password\"\n</code></pre> <p>Create an instance of Pocketful class</p> <pre><code>pocket = pocketful()\n</code></pre> <p>Generate a session with your client-id, password and totp of your account with the help of instance you created above.</p> <pre><code>login = pocket.generateSession(pace_clintId, pace_password,\"totp\")  \n</code></pre> <p>After the login, we get an access token in response, use pocket instance to store the access token.</p> <pre><code>setAccessToken = pocket.setAccessToken(login[\"data\"][\"auth_token\"])\n</code></pre> <p>Congratulations! By following the steps outlined above, you have seamlessly accessed your pocketful account without the need for manual intervention, thanks to the assistance of our APIs and methods.</p> <p>With full access to your pocketful account now granted, you're empowered to leverage our methods for executing trades or querying your account details. Next you can consider our documentation as a comprehensive tutorial where you can proceed step-by-step, mastering at your own pace. Alternatively, feel free to navigate directly to the methods or APIs that pique your interest, allowing you to embark on your journey with freedom and flexibility.</p>"},{"location":"profile/","title":"Profile","text":"<p>The profile API is designed to retrieve comprehensive information about a user. Upon making a request to this API, the response typically contains all the details associated with the client, including personal, financial, and account-related information.</p>"},{"location":"profile/#python-code","title":"Python Code","text":"<pre><code>profile = pocket.getProfile()   # No parameters needs to be passed.\n</code></pre>"},{"location":"profile/#response","title":"Response","text":"<pre><code>{\n    \"data\": {\n        \"bo_id\": [\n            \"1206140012061400\"\n        ],\n        \"client_id\": \"TEST1\",\n        \"ddpi\": false,\n        \"email_id\": \"test@TRADELAB.IN\",\n        \"exchanges_subscribed\": [\n            \"NFO\",\n            \"NSE\",\n            \"BSE\",\n            \"CDS\"\n        ],\n        \"name\": \"DEMO\",\n        \"poa_enabled\": true,\n        \"products_enabled\": [\n            \"NRML\",\n            \"CNC\",\n            \"MIS\"\n        ],\n        \"status\": \"active\"\n    },\n    \"message\": \"\",\n    \"status\": \"success\"\n}\n</code></pre>"},{"location":"profile/#response-parameters","title":"Response Parameters","text":"Key Description permanent_addr Permanent address of the client. exchange_nnf Subscription status for various exchanges (BSE, MCX, NFO, NSE) - 0 means not subscribed. sex Gender of the client. account_type Type of account (e.g., savings, current). bank_account_number Bank account number of the client. bank_city City where the bank is located. twofa_enabled Two-factor authentication status - true/false. bo_id Back office identifier(s) associated with the client. dp_id Depository participant identifier(s) associated with the client. backoffice_link Link to the back office system for the client. status Status of the client's account. office_addr Office address of the client. ifsc_code IFSC code of the bank associated with the client. depository Depository associated with the client (null if not specified). name Name of the client. client_id Unique identifier for the client. profile_url URL of the client's profile. last_password_change_date Date when the client last changed their password. phone_number Phone number of the client. role Role of the client (id and name). user_type Type of user (e.g., CLIENT, STAFF). exchanges_subscribed List of exchanges subscribed by the client. poa_enabled Power of attorney (POA) status - true/false. cp_code CP (Clearing Participant) code associated with the client. email_id Email address of the client. branch Branch of the bank where the client's account is held. bank_state State where the bank is located. poa_status Power of attorney (POA) status - true/false. dob Date of birth of the client. broker_id Unique identifier for the broker associated with the client. city City where the client resides. state State where the client resides. basket_enabled Basket order facility status - true/false. pan_number Permanent account number (PAN) of the client. bank_branch_name Name of the bank branch. products_enabled List of products enabled for the client (e.g., NRML, MIS, CNC). bank_name Name of the bank associated with the client. user_conscents User consents (if any). entity_type Type of entity (e.g., RETAIL, CORPORATE)."},{"location":"profile/#error-response","title":"Error Response","text":"<pre><code>{\n  \"status\": \"error\",\n  \"message\": \"Request forbidden\",\n  \"error_code\": 40000,\n  \"data\":{\n  }\n}\n</code></pre>"},{"location":"IPO/all_ipo_data/","title":"All ipo data","text":""},{"location":"IPO/all_ipo_data/#get-all-ipo","title":"Get All IPO","text":"<pre><code>pocket.getAllIpo()\n</code></pre>"},{"location":"IPO/all_ipo_data/#response","title":"Response","text":"<pre><code>{\n  \"success\": true,\n  \"message\": \"All IPO fetched.\",\n  \"data\": {\n    \"all_ipo\": {\n      \"data\": [\n        {\n          \"biddingStartDate\": \"13-03-2024\",\n          \"symbol\": \"AVPINFRA\",\n          \"minBidQuantity\": 1600,\n          \"registrar\": \"PURVA\",\n          \"lotSize\": 1600,\n          \"t1ModEndDate\": \"\",\n          \"dailyStartTime\": \"10:00:00\",\n          \"t1ModStartTime\": \"10:00:00\",\n          \"biddingEndDate\": \"15-03-2024\",\n          \"t1ModEndTime\": \"13:00:00\",\n          \"dailyEndTime\": \"17:00:00\",\n          \"tickSize\": 1,\n          \"issueType\": \"EQUITY\",\n          \"faceValue\": 10,\n          \"minPrice\": 71,\n          \"t1ModStartDate\": \"\",\n          \"name\": \"AVP Infracon Limited\",\n          \"issueSize\": 5108800,\n          \"amo_order_entry_time\": \"\",\n          \"maxPrice\": 75,\n          \"cutOffPrice\": 75,\n          \"unixBiddingEndDate\": 0,\n          \"unixBiddingStartDate\": 0,\n          \"exchange_issue_type\": \"\",\n          \"isin\": \"INE0R9401019\",\n          \"allotmentDate\": \"\",\n          \"allotment_begins\": \"\",\n          \"refundDate\": \"\",\n          \"listingDate\": \"\",\n          \"aboutCompany\": \"\",\n          \"parentCompany\": \"\",\n          \"foundedYear\": \"\",\n          \"prospectusFileUrl\": \"\",\n          \"managingDirector\": \"\",\n          \"MaxLimit\": 0,\n          \"RetailDiscount\": 0,\n          \"categoryDetails\": [\n            {\n              \"code\": \"POLNIB\",\n              \"startTime\": \"\",\n              \"endTime\": \"\"\n            },\n            {\n              \"code\": \"POLRET\",\n              \"startTime\": \"\",\n              \"endTime\": \"\"\n            },\n            {\n              \"code\": \"QIB\",\n              \"startTime\": \"10:00:00\",\n              \"endTime\": \"17:00:00\"\n            },\n            {\n              \"code\": \"NIB\",\n              \"startTime\": \"10:00:00\",\n              \"endTime\": \"17:00:00\"\n            },\n            {\n              \"code\": \"RETAIL\",\n              \"startTime\": \"10:00:00\",\n              \"endTime\": \"17:00:00\"\n            },\n            {\n              \"code\": \"EMPNIB\",\n              \"startTime\": \"\",\n              \"endTime\": \"\"\n            },\n            {\n              \"code\": \"EMPRET\",\n              \"startTime\": \"\",\n              \"endTime\": \"\"\n            },\n            {\n              \"code\": \"SHANIB\",\n              \"startTime\": \"\",\n              \"endTime\": \"\"\n            },\n            {\n              \"code\": \"SHARET\",\n              \"startTime\": \"\",\n              \"endTime\": \"\"\n            }\n          ],\n          \"subCategorySettings\": [\n            {\n              \"subCatCode\": \"POL\",\n              \"minValue\": 0,\n              \"maxUpiLimit\": 0,\n              \"allowCutOff\": false,\n              \"allowUpi\": false,\n              \"maxValue\": 0,\n              \"discountPrice\": null,\n              \"discountType\": \"\",\n              \"maxPrice\": null,\n              \"caCode\": \"POLNIB\",\n              \"allowed\": false,\n              \"start_date\": \"\",\n              \"end_date\": \"\",\n              \"displayName\": \"\",\n              \"min_lot_size\": 0\n            },\n            {\n              \"subCatCode\": \"POL\",\n              \"minValue\": 0,\n              \"maxUpiLimit\": 0,\n              \"allowCutOff\": false,\n              \"allowUpi\": false,\n              \"maxValue\": 0,\n              \"discountPrice\": null,\n              \"discountType\": \"\",\n              \"maxPrice\": null,\n              \"caCode\": \"POLRET\",\n              \"allowed\": false,\n              \"start_date\": \"\",\n              \"end_date\": \"\",\n              \"displayName\": \"\",\n              \"min_lot_size\": 0\n            },\n            {\n              \"subCatCode\": \"FI\",\n              \"minValue\": 200001,\n              \"maxUpiLimit\": 0,\n              \"allowCutOff\": false,\n              \"allowUpi\": false,\n              \"maxValue\": 328320000,\n              \"discountPrice\": null,\n              \"discountType\": \"\",\n              \"maxPrice\": null,\n              \"caCode\": \"QIB\",\n              \"allowed\": false,\n              \"start_date\": \"\",\n              \"end_date\": \"\",\n              \"displayName\": \"\",\n              \"min_lot_size\": 0\n            },\n            {\n              \"subCatCode\": \"FII\",\n              \"minValue\": 200001,\n              \"maxUpiLimit\": 0,\n              \"allowCutOff\": false,\n              \"allowUpi\": false,\n              \"maxValue\": 328320000,\n              \"discountPrice\": null,\n              \"discountType\": \"\",\n              \"maxPrice\": null,\n              \"caCode\": \"QIB\",\n              \"allowed\": false,\n              \"start_date\": \"\",\n              \"end_date\": \"\",\n              \"displayName\": \"\",\n              \"min_lot_size\": 0\n            },\n            {\n              \"subCatCode\": \"MF\",\n              \"minValue\": 200001,\n              \"maxUpiLimit\": 0,\n              \"allowCutOff\": false,\n              \"allowUpi\": false,\n              \"maxValue\": 328320000,\n              \"discountPrice\": null,\n              \"discountType\": \"\",\n              \"maxPrice\": null,\n              \"caCode\": \"QIB\",\n              \"allowed\": false,\n              \"start_date\": \"\",\n              \"end_date\": \"\",\n              \"displayName\": \"\",\n              \"min_lot_size\": 0\n            },\n            {\n              \"subCatCode\": \"IC\",\n              \"minValue\": 200001,\n              \"maxUpiLimit\": 0,\n              \"allowCutOff\": false,\n              \"allowUpi\": false,\n              \"maxValue\": 328320000,\n              \"discountPrice\": null,\n              \"discountType\": \"\",\n              \"maxPrice\": null,\n              \"caCode\": \"QIB\",\n              \"allowed\": false,\n              \"start_date\": \"\",\n              \"end_date\": \"\",\n              \"displayName\": \"\",\n              \"min_lot_size\": 0\n            },\n            {\n              \"subCatCode\": \"OTH\",\n              \"minValue\": 200001,\n              \"maxUpiLimit\": 0,\n              \"allowCutOff\": false,\n              \"allowUpi\": false,\n              \"maxValue\": 328320000,\n              \"discountPrice\": null,\n              \"discountType\": \"\",\n              \"maxPrice\": null,\n              \"caCode\": \"QIB\",\n              \"allowed\": false,\n              \"start_date\": \"\",\n              \"end_date\": \"\",\n              \"displayName\": \"\",\n              \"min_lot_size\": 0\n            },\n            {\n              \"subCatCode\": \"CO\",\n              \"minValue\": 200001,\n              \"maxUpiLimit\": 0,\n              \"allowCutOff\": false,\n              \"allowUpi\": false,\n              \"maxValue\": 234720000,\n              \"discountPrice\": null,\n              \"discountType\": \"\",\n              \"maxPrice\": null,\n              \"caCode\": \"NIB\",\n              \"allowed\": false,\n              \"start_date\": \"\",\n              \"end_date\": \"\",\n              \"displayName\": \"\",\n              \"min_lot_size\": 0\n            },\n            {\n              \"subCatCode\": \"NOH\",\n              \"minValue\": 200001,\n              \"maxUpiLimit\": 0,\n              \"allowCutOff\": false,\n              \"allowUpi\": false,\n              \"maxValue\": 234720000,\n              \"discountPrice\": null,\n              \"discountType\": \"\",\n              \"maxPrice\": null,\n              \"caCode\": \"NIB\",\n              \"allowed\": false,\n              \"start_date\": \"\",\n              \"end_date\": \"\",\n              \"displayName\": \"\",\n              \"min_lot_size\": 0\n            },\n            {\n              \"subCatCode\": \"IND\",\n              \"minValue\": 200001,\n              \"maxUpiLimit\": 500000,\n              \"allowCutOff\": false,\n              \"allowUpi\": true,\n              \"maxValue\": 234720000,\n              \"discountPrice\": null,\n              \"discountType\": \"\",\n              \"maxPrice\": null,\n              \"caCode\": \"NIB\",\n              \"allowed\": false,\n              \"start_date\": \"\",\n              \"end_date\": \"\",\n              \"displayName\": \"\",\n              \"min_lot_size\": 0\n            },\n            {\n              \"subCatCode\": \"IND\",\n              \"minValue\": 0,\n              \"maxUpiLimit\": 200000,\n              \"allowCutOff\": true,\n              \"allowUpi\": true,\n              \"maxValue\": 200000,\n              \"discountPrice\": null,\n              \"discountType\": \"\",\n              \"maxPrice\": null,\n              \"caCode\": \"RETAIL\",\n              \"allowed\": false,\n              \"start_date\": \"\",\n              \"end_date\": \"\",\n              \"displayName\": \"\",\n              \"min_lot_size\": 0\n            },\n            {\n              \"subCatCode\": \"EMP\",\n              \"minValue\": 0,\n              \"maxUpiLimit\": 0,\n              \"allowCutOff\": false,\n              \"allowUpi\": false,\n              \"maxValue\": 0,\n              \"discountPrice\": null,\n              \"discountType\": \"\",\n              \"maxPrice\": null,\n              \"caCode\": \"EMPNIB\",\n              \"allowed\": false,\n              \"start_date\": \"\",\n              \"end_date\": \"\",\n              \"displayName\": \"\",\n              \"min_lot_size\": 0\n            },\n            {\n              \"subCatCode\": \"EMP\",\n              \"minValue\": 0,\n              \"maxUpiLimit\": 0,\n              \"allowCutOff\": false,\n              \"allowUpi\": false,\n              \"maxValue\": 0,\n              \"discountPrice\": null,\n              \"discountType\": \"\",\n              \"maxPrice\": null,\n              \"caCode\": \"EMPRET\",\n              \"allowed\": false,\n              \"start_date\": \"\",\n              \"end_date\": \"\",\n              \"displayName\": \"\",\n              \"min_lot_size\": 0\n            },\n            {\n              \"subCatCode\": \"SHA\",\n              \"minValue\": 0,\n              \"maxUpiLimit\": 0,\n              \"allowCutOff\": false,\n              \"allowUpi\": false,\n              \"maxValue\": 0,\n              \"discountPrice\": null,\n              \"discountType\": \"\",\n              \"maxPrice\": null,\n              \"caCode\": \"SHANIB\",\n              \"allowed\": false,\n              \"start_date\": \"\",\n              \"end_date\": \"\",\n              \"displayName\": \"\",\n              \"min_lot_size\": 0\n            },\n            {\n              \"subCatCode\": \"SHA\",\n              \"minValue\": 0,\n              \"maxUpiLimit\": 0,\n              \"allowCutOff\": false,\n              \"allowUpi\": false,\n              \"maxValue\": 0,\n              \"discountPrice\": null,\n              \"discountType\": \"\",\n              \"maxPrice\": null,\n              \"caCode\": \"SHARET\",\n              \"allowed\": false,\n              \"start_date\": \"\",\n              \"end_date\": \"\",\n              \"displayName\": \"\",\n              \"min_lot_size\": 0\n            }\n          ],\n          \"ipoAllowed\": false,\n          \"bse_allowed\": false,\n          \"nse_allowed\": false,\n          \"subType\": \"SME\"\n        },\n      ],\n      \"status\": \"success\"\n    },\n    \"open_ipo\": [\n      {\n        \"biddingStartDate\": \"13-03-2024\",\n        \"symbol\": \"AVPINFRA\",\n        \"minBidQuantity\": 1600,\n        \"registrar\": \"PURVA\",\n        \"lotSize\": 1600,\n        \"t1ModEndDate\": \"\",\n        \"dailyStartTime\": \"10:00:00\",\n        \"t1ModStartTime\": \"10:00:00\",\n        \"biddingEndDate\": \"15-03-2024\",\n        \"t1ModEndTime\": \"13:00:00\",\n        \"dailyEndTime\": \"17:00:00\",\n        \"tickSize\": 1,\n        \"issueType\": \"EQUITY\",\n        \"faceValue\": 10,\n        \"minPrice\": 71,\n        \"t1ModStartDate\": \"\",\n        \"name\": \"AVP Infracon Limited\",\n        \"issueSize\": 5108800,\n        \"amo_order_entry_time\": \"\",\n        \"maxPrice\": 75,\n        \"cutOffPrice\": 75,\n        \"unixBiddingEndDate\": 1710522000,\n        \"unixBiddingStartDate\": 1710324000,\n        \"exchange_issue_type\": \"\",\n        \"isin\": \"INE0R9401019\",\n        \"allotmentDate\": \"\",\n        \"allotment_begins\": \"\",\n        \"refundDate\": \"\",\n        \"listingDate\": \"\",\n        \"aboutCompany\": \"\",\n        \"parentCompany\": \"\",\n        \"foundedYear\": \"\",\n        \"prospectusFileUrl\": \"\",\n        \"managingDirector\": \"\",\n        \"MaxLimit\": 0,\n        \"RetailDiscount\": 0,\n        \"categoryDetails\": [],\n        \"subCategorySettings\": [\n          {\n            \"subCatCode\": \"IND\",\n            \"minValue\": \"0\",\n            \"maxUpiLimit\": \"200000\",\n            \"allowCutOff\": true,\n            \"allowUpi\": true,\n            \"maxValue\": \"200000\",\n            \"discountPrice\": \"\",\n            \"discountType\": \"\",\n            \"maxPrice\": \"&lt;nil&gt;\",\n            \"caCode\": \"RETAIL\",\n            \"allowed\": false,\n            \"start_date\": \"\",\n            \"end_date\": \"\",\n            \"displayName\": \"RETAIL CUSTOMERS\",\n            \"min_lot_size\": 1\n          },\n          {\n            \"subCatCode\": \"IND\",\n            \"minValue\": \"200001\",\n            \"maxUpiLimit\": \"500000\",\n            \"allowCutOff\": false,\n            \"allowUpi\": true,\n            \"maxValue\": \"2.3472e+08\",\n            \"discountPrice\": \"\",\n            \"discountType\": \"\",\n            \"maxPrice\": \"&lt;nil&gt;\",\n            \"caCode\": \"NIB\",\n            \"allowed\": false,\n            \"start_date\": \"\",\n            \"end_date\": \"\",\n            \"displayName\": \"NIB CUSTOMERS\",\n            \"min_lot_size\": 2\n          }\n        ],\n        \"ipoAllowed\": false,\n        \"bse_allowed\": false,\n        \"nse_allowed\": false,\n        \"subType\": \"SME\"\n      },\n    ],\n    \"upcoming_ipo\": [\n      {\n        \"biddingStartDate\": \"15-03-2024\",\n        \"symbol\": \"ENFUSE\",\n        \"minBidQuantity\": 1200,\n        \"registrar\": \"BIGSHARE\",\n        \"lotSize\": 1200,\n        \"t1ModEndDate\": \"\",\n        \"dailyStartTime\": \"10:00:00\",\n        \"t1ModStartTime\": \"10:00:00\",\n        \"biddingEndDate\": \"19-03-2024\",\n        \"t1ModEndTime\": \"13:00:00\",\n        \"dailyEndTime\": \"17:00:00\",\n        \"tickSize\": 1,\n        \"issueType\": \"EQUITY\",\n        \"faceValue\": 10,\n        \"minPrice\": 91,\n        \"t1ModStartDate\": \"\",\n        \"name\": \"Enfuse Solutions Limited\",\n        \"issueSize\": 2337600,\n        \"amo_order_entry_time\": \"\",\n        \"maxPrice\": 96,\n        \"cutOffPrice\": 96,\n        \"unixBiddingEndDate\": 0,\n        \"unixBiddingStartDate\": 0,\n        \"exchange_issue_type\": \"\",\n        \"isin\": \"INE0S3X01014\",\n        \"allotmentDate\": \"\",\n        \"allotment_begins\": \"\",\n        \"refundDate\": \"\",\n        \"listingDate\": \"\",\n        \"aboutCompany\": \"\",\n        \"parentCompany\": \"\",\n        \"foundedYear\": \"\",\n        \"prospectusFileUrl\": \"\",\n        \"managingDirector\": \"\",\n        \"MaxLimit\": 0,\n        \"RetailDiscount\": 0,\n        \"categoryDetails\": [\n          {\n            \"code\": \"POLNIB\",\n            \"startTime\": \"\",\n            \"endTime\": \"\"\n          },\n          {\n            \"code\": \"POLRET\",\n            \"startTime\": \"\",\n            \"endTime\": \"\"\n          },\n          {\n            \"code\": \"QIB\",\n            \"startTime\": \"10:00:00\",\n            \"endTime\": \"17:00:00\"\n          },\n          {\n            \"code\": \"NIB\",\n            \"startTime\": \"10:00:00\",\n            \"endTime\": \"17:00:00\"\n          },\n          {\n            \"code\": \"RETAIL\",\n            \"startTime\": \"10:00:00\",\n            \"endTime\": \"17:00:00\"\n          },\n          {\n            \"code\": \"EMPNIB\",\n            \"startTime\": \"\",\n            \"endTime\": \"\"\n          },\n          {\n            \"code\": \"EMPRET\",\n            \"startTime\": \"\",\n            \"endTime\": \"\"\n          },\n          {\n            \"code\": \"SHANIB\",\n            \"startTime\": \"\",\n            \"endTime\": \"\"\n          },\n          {\n            \"code\": \"SHARET\",\n            \"startTime\": \"\",\n            \"endTime\": \"\"\n          }\n        ],\n        \"subCategorySettings\": [\n          {\n            \"subCatCode\": \"POL\",\n            \"minValue\": 0,\n            \"maxUpiLimit\": 0,\n            \"allowCutOff\": false,\n            \"allowUpi\": false,\n            \"maxValue\": 0,\n            \"discountPrice\": null,\n            \"discountType\": \"\",\n            \"maxPrice\": null,\n            \"caCode\": \"POLNIB\",\n            \"allowed\": false,\n            \"start_date\": \"\",\n            \"end_date\": \"\",\n            \"displayName\": \"\",\n            \"min_lot_size\": 0\n          },\n          {\n            \"subCatCode\": \"POL\",\n            \"minValue\": 0,\n            \"maxUpiLimit\": 0,\n            \"allowCutOff\": false,\n            \"allowUpi\": false,\n            \"maxValue\": 0,\n            \"discountPrice\": null,\n            \"discountType\": \"\",\n            \"maxPrice\": null,\n            \"caCode\": \"POLRET\",\n            \"allowed\": false,\n            \"start_date\": \"\",\n            \"end_date\": \"\",\n            \"displayName\": \"\",\n            \"min_lot_size\": 0\n          },\n          {\n            \"subCatCode\": \"FI\",\n            \"minValue\": 200001,\n            \"maxUpiLimit\": 0,\n            \"allowCutOff\": false,\n            \"allowUpi\": false,\n            \"maxValue\": 212889600,\n            \"discountPrice\": null,\n            \"discountType\": \"\",\n            \"maxPrice\": null,\n            \"caCode\": \"QIB\",\n            \"allowed\": false,\n            \"start_date\": \"\",\n            \"end_date\": \"\",\n            \"displayName\": \"\",\n            \"min_lot_size\": 0\n          },\n          {\n            \"subCatCode\": \"FII\",\n            \"minValue\": 200001,\n            \"maxUpiLimit\": 0,\n            \"allowCutOff\": false,\n            \"allowUpi\": false,\n            \"maxValue\": 212889600,\n            \"discountPrice\": null,\n            \"discountType\": \"\",\n            \"maxPrice\": null,\n            \"caCode\": \"QIB\",\n            \"allowed\": false,\n            \"start_date\": \"\",\n            \"end_date\": \"\",\n            \"displayName\": \"\",\n            \"min_lot_size\": 0\n          },\n          {\n            \"subCatCode\": \"MF\",\n            \"minValue\": 200001,\n            \"maxUpiLimit\": 0,\n            \"allowCutOff\": false,\n            \"allowUpi\": false,\n            \"maxValue\": 212889600,\n            \"discountPrice\": null,\n            \"discountType\": \"\",\n            \"maxPrice\": null,\n            \"caCode\": \"QIB\",\n            \"allowed\": false,\n            \"start_date\": \"\",\n            \"end_date\": \"\",\n            \"displayName\": \"\",\n            \"min_lot_size\": 0\n          },\n          {\n            \"subCatCode\": \"IC\",\n            \"minValue\": 200001,\n            \"maxUpiLimit\": 0,\n            \"allowCutOff\": false,\n            \"allowUpi\": false,\n            \"maxValue\": 212889600,\n            \"discountPrice\": null,\n            \"discountType\": \"\",\n            \"maxPrice\": null,\n            \"caCode\": \"QIB\",\n            \"allowed\": false,\n            \"start_date\": \"\",\n            \"end_date\": \"\",\n            \"displayName\": \"\",\n            \"min_lot_size\": 0\n          },\n          {\n            \"subCatCode\": \"OTH\",\n            \"minValue\": 200001,\n            \"maxUpiLimit\": 0,\n            \"allowCutOff\": false,\n            \"allowUpi\": false,\n            \"maxValue\": 212889600,\n            \"discountPrice\": null,\n            \"discountType\": \"\",\n            \"maxPrice\": null,\n            \"caCode\": \"QIB\",\n            \"allowed\": false,\n            \"start_date\": \"\",\n            \"end_date\": \"\",\n            \"displayName\": \"\",\n            \"min_lot_size\": 0\n          },\n          {\n            \"subCatCode\": \"CO\",\n            \"minValue\": 200001,\n            \"maxUpiLimit\": 0,\n            \"allowCutOff\": false,\n            \"allowUpi\": false,\n            \"maxValue\": 106560000,\n            \"discountPrice\": null,\n            \"discountType\": \"\",\n            \"maxPrice\": null,\n            \"caCode\": \"NIB\",\n            \"allowed\": false,\n            \"start_date\": \"\",\n            \"end_date\": \"\",\n            \"displayName\": \"\",\n            \"min_lot_size\": 0\n          },\n          {\n            \"subCatCode\": \"NOH\",\n            \"minValue\": 200001,\n            \"maxUpiLimit\": 0,\n            \"allowCutOff\": false,\n            \"allowUpi\": false,\n            \"maxValue\": 106560000,\n            \"discountPrice\": null,\n            \"discountType\": \"\",\n            \"maxPrice\": null,\n            \"caCode\": \"NIB\",\n            \"allowed\": false,\n            \"start_date\": \"\",\n            \"end_date\": \"\",\n            \"displayName\": \"\",\n            \"min_lot_size\": 0\n          },\n          {\n            \"subCatCode\": \"IND\",\n            \"minValue\": 200001,\n            \"maxUpiLimit\": 500000,\n            \"allowCutOff\": false,\n            \"allowUpi\": true,\n            \"maxValue\": 106560000,\n            \"discountPrice\": null,\n            \"discountType\": \"\",\n            \"maxPrice\": null,\n            \"caCode\": \"NIB\",\n            \"allowed\": false,\n            \"start_date\": \"\",\n            \"end_date\": \"\",\n            \"displayName\": \"\",\n            \"min_lot_size\": 0\n          },\n          {\n            \"subCatCode\": \"IND\",\n            \"minValue\": 0,\n            \"maxUpiLimit\": 200000,\n            \"allowCutOff\": true,\n            \"allowUpi\": true,\n            \"maxValue\": 200000,\n            \"discountPrice\": null,\n            \"discountType\": \"\",\n            \"maxPrice\": null,\n            \"caCode\": \"RETAIL\",\n            \"allowed\": false,\n            \"start_date\": \"\",\n            \"end_date\": \"\",\n            \"displayName\": \"\",\n            \"min_lot_size\": 0\n          },\n          {\n            \"subCatCode\": \"EMP\",\n            \"minValue\": 0,\n            \"maxUpiLimit\": 0,\n            \"allowCutOff\": false,\n            \"allowUpi\": false,\n            \"maxValue\": 0,\n            \"discountPrice\": null,\n            \"discountType\": \"\",\n            \"maxPrice\": null,\n            \"caCode\": \"EMPNIB\",\n            \"allowed\": false,\n            \"start_date\": \"\",\n            \"end_date\": \"\",\n            \"displayName\": \"\",\n            \"min_lot_size\": 0\n          },\n          {\n            \"subCatCode\": \"EMP\",\n            \"minValue\": 0,\n            \"maxUpiLimit\": 0,\n            \"allowCutOff\": false,\n            \"allowUpi\": false,\n            \"maxValue\": 0,\n            \"discountPrice\": null,\n            \"discountType\": \"\",\n            \"maxPrice\": null,\n            \"caCode\": \"EMPRET\",\n            \"allowed\": false,\n            \"start_date\": \"\",\n            \"end_date\": \"\",\n            \"displayName\": \"\",\n            \"min_lot_size\": 0\n          },\n          {\n            \"subCatCode\": \"SHA\",\n            \"minValue\": 0,\n            \"maxUpiLimit\": 0,\n            \"allowCutOff\": false,\n            \"allowUpi\": false,\n            \"maxValue\": 0,\n            \"discountPrice\": null,\n            \"discountType\": \"\",\n            \"maxPrice\": null,\n            \"caCode\": \"SHANIB\",\n            \"allowed\": false,\n            \"start_date\": \"\",\n            \"end_date\": \"\",\n            \"displayName\": \"\",\n            \"min_lot_size\": 0\n          },\n          {\n            \"subCatCode\": \"SHA\",\n            \"minValue\": 0,\n            \"maxUpiLimit\": 0,\n            \"allowCutOff\": false,\n            \"allowUpi\": false,\n            \"maxValue\": 0,\n            \"discountPrice\": null,\n            \"discountType\": \"\",\n            \"maxPrice\": null,\n            \"caCode\": \"SHARET\",\n            \"allowed\": false,\n            \"start_date\": \"\",\n            \"end_date\": \"\",\n            \"displayName\": \"\",\n            \"min_lot_size\": 0\n          }\n        ],\n        \"ipoAllowed\": false,\n        \"bse_allowed\": false,\n        \"nse_allowed\": false,\n        \"subType\": \"SME\"\n      },\n    ],\n    \"closed_ipo\": [\n      {\n        \"biddingStartDate\": \"11-03-2024\",\n        \"symbol\": \"PRATHAM\",\n        \"minBidQuantity\": 1600,\n        \"registrar\": \"LINK\",\n        \"lotSize\": 1600,\n        \"t1ModEndDate\": \"\",\n        \"dailyStartTime\": \"10:00:00\",\n        \"t1ModStartTime\": \"\",\n        \"biddingEndDate\": \"13-03-2024\",\n        \"t1ModEndTime\": \"\",\n        \"dailyEndTime\": \"17:00:00\",\n        \"tickSize\": 1,\n        \"issueType\": \"EQUITY\",\n        \"faceValue\": 10,\n        \"minPrice\": 71,\n        \"t1ModStartDate\": \"\",\n        \"name\": \"Pratham EPC Projects Limited\",\n        \"issueSize\": 4800000,\n        \"amo_order_entry_time\": \"\",\n        \"maxPrice\": 75,\n        \"cutOffPrice\": 75,\n        \"unixBiddingEndDate\": 1710349200,\n        \"unixBiddingStartDate\": 1710151200,\n        \"exchange_issue_type\": \"\",\n        \"isin\": \"INE0QA601016\",\n        \"allotmentDate\": \"\",\n        \"allotment_begins\": \"\",\n        \"refundDate\": \"\",\n        \"listingDate\": \"\",\n        \"aboutCompany\": \"\",\n        \"parentCompany\": \"\",\n        \"foundedYear\": \"\",\n        \"prospectusFileUrl\": \"\",\n        \"managingDirector\": \"\",\n        \"MaxLimit\": 0,\n        \"RetailDiscount\": 0,\n        \"categoryDetails\": null,\n        \"subCategorySettings\": null,\n        \"ipoAllowed\": false,\n        \"bse_allowed\": false,\n        \"nse_allowed\": false,\n        \"subType\": \"\"\n      },\n    ]\n  }\n}\n</code></pre>"},{"location":"IPO/fetch_ipo_order/","title":"Fetch ipo order","text":""},{"location":"IPO/fetch_ipo_order/#fetch-ipo-order","title":"Fetch IPO Order","text":"<pre><code>pocket.fetchIPOOrder()\n</code></pre>"},{"location":"IPO/place_ipo_order/","title":"Place ipo order","text":""},{"location":"IPO/place_ipo_order/#place-ipo-order","title":"Place IPO Order","text":"<pre><code>pocket.placeIPOOrder()\n</code></pre>"},{"location":"contract_details/scrip_info/","title":"Scrip Info","text":"<p>The Search Scrip API is designed to provide users with detailed information about a specific financial instrument based on the exchange and instrument token provided as inputs. Upon receiving the exchange and instrument token as parameters, the API searches its database to retrieve relevant data about the corresponding scrip. By utilizing this API, users can efficiently retrieve comprehensive information about a particular scrip, enabling them to make well-informed investment decisions and stay updated on the latest market developments.</p>"},{"location":"contract_details/scrip_info/#python-method","title":"Python Method","text":"<pre><code>pocket.getScripInfo(parameters) \n</code></pre>"},{"location":"contract_details/scrip_info/#parameters","title":"Parameters","text":"Field Name Data Type Description Exchange String Name of the exchange where the order is being placed. Possible values include <code>NSE</code>, <code>BSE</code>, <code>NFO</code>, <code>CDS</code>, <code>MCX</code>. Instrument Token Integer Unique identifier assigned to each financial instrument within the exchange."},{"location":"contract_details/scrip_info/#example","title":"Example","text":"<p>response = obj.getScripInfo('NSE', 11915)</p>"},{"location":"contract_details/scrip_info/#response","title":"Response","text":"<pre><code>{\n  \"error\": {\n    \"code\": 0,\n    \"message\": \"\"\n  },\n  \"result\": {\n    \"alternate_exchange\": \"BSE\",\n    \"alternate_token\": 532648,\n    \"alternate_trading_symbol\": \"YESBANK-A\",\n    \"asm\": \"-1\",\n    \"asset_code\": \"\",\n    \"board_lot_quantity\": 1,\n    \"book_closure_end_date\": \"12-Jun-2019\",\n    \"book_closure_start_date\": \"6-Jun-2019\",\n    \"change_in_oi\": 0,\n    \"circuit_rating\": \"\",\n    \"close_price\": \"22.85\",\n    \"comments\": \"AGM/DIV-RS 2 PER SH\",\n    \"company_name\": \"YES BANK LIMITED\",\n    \"delivery_end_date\": \"\",\n    \"delivery_start_date\": \"\",\n    \"delivery_unit_factor\": 0,\n    \"delivery_units\": \"\",\n    \"display_name\": \"YESBANK\",\n    \"dpr\": \"18.3000 - 27.4000\",\n    \"exchange\": 1,\n    \"execution\": \"NA\",\n    \"expiry\": 0,\n    \"expiry_string\": \"\",\n    \"exposure\": \"5.000000\",\n    \"face_value\": 2,\n    \"fin_instrm_pdct_tp_cd\": \"\",\n    \"freeze\": 0,\n    \"general_denominator\": \"\",\n    \"gsm\": \"-1\",\n    \"have_futures\": false,\n    \"have_options\": false,\n    \"higher_circuit_limit\": 27.4,\n    \"instrument_name\": \"EQ\",\n    \"instrument_token\": 11915,\n    \"instrument_type\": \"0\",\n    \"is_index\": false,\n    \"is_mtf_eligible\": false,\n    \"isin\": \"INE528G01035\",\n    \"issue_maturity_date\": 0,\n    \"issue_rate\": 0,\n    \"issue_start_date\": \"12-Jul-2005\",\n    \"last_trade_vol\": \"\",\n    \"last_trading_date\": \"\",\n    \"list_date\": \"12-Jul-2005\",\n    \"local_update_time\": \"\",\n    \"lower_circuit_limit\": 18.3,\n    \"market_type\": \"\",\n    \"max_order_size\": 0,\n    \"max_single_qty\": 0,\n    \"month_identifier\": 0,\n    \"mtf_margin\": 0,\n    \"multiplier\": 1,\n    \"no_delivery_date_end\": \"0\",\n    \"no_delivery_date_start\": \"0\",\n    \"open_interest\": 0,\n    \"option_type\": \"\",\n    \"partition_id\": 0,\n    \"precision\": 2,\n    \"price_denominator\": 0,\n    \"price_numerator\": 0,\n    \"price_quotation\": 0,\n    \"price_units\": \"\",\n    \"product_category\": \"\",\n    \"product_id\": 0,\n    \"raw_expiry\": 0,\n    \"raw_tender_period_end_date\": \"\",\n    \"raw_tender_period_start_date\": \"\",\n    \"raw_tick_size\": 5,\n    \"re_admission_date\": \"0\",\n    \"record_date\": \"0\",\n    \"series\": \"EQ\",\n    \"short_code\": \"\",\n    \"span\": [\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0\n    ],\n    \"special_preopen\": 0,\n    \"strike\": 0,\n    \"surveillance_indicator\": 0,\n    \"symbol\": \"YESBANK\",\n    \"symbol2\": \"\",\n    \"tag\": \"\",\n    \"tender_period_end_date\": \"\",\n    \"tender_period_start_date\": \"\",\n    \"tick_size\": 0.05,\n    \"tradable\": true,\n    \"trade_to_trade\": false,\n    \"trading_symbol\": \"YESBANK-EQ\",\n    \"trading_unit_factor\": 0,\n    \"trading_units\": \"\",\n    \"underlying_token\": 11915,\n    \"var\": \"23.08\",\n    \"warning\": \"1\",\n    \"yearly_high_price\": \"32.85\",\n    \"yearly_low_price\": \"14.40\"\n  }\n}\n</code></pre> Key Description alternate_exchange The alternate exchange where the asset is traded. alternate_token The alternate token or identifier of the asset. alternate_trading_symbol The alternate trading symbol of the asset. asm The adhoc margin for the asset. asset_code The code associated with the asset. board_lot_quantity The quantity of the asset in a board lot. book_closure_end_date The end date of the book closure period. book_closure_start_date The start date of the book closure period. change_in_oi The change in open interest for the asset. circuit_rating The circuit rating of the asset. close_price The closing price of the asset. comments Any additional comments or notes related to the asset. company_name The name of the company associated with the asset. delivery_end_date The end date for delivery of the asset. delivery_start_date The start date for delivery of the asset. delivery_unit_factor The factor for the delivery unit of the asset. delivery_units The units for delivery of the asset. display_name The display name of the asset. dpr The daily price range of the asset. exchange The exchange where the asset is traded. execution The execution status of the asset. expiry The expiry date of the asset. expiry_string The string representation of the expiry date. exposure The exposure of the asset. face_value The face value of the asset. fin_instrm_pdct_tp_cd The product type code of the financial instrument. freeze Indicates if the asset is frozen. general_denominator The general denominator of the asset. gsm The GSM (graded surveillance mechanism) status of the asset. have_futures Indicates if the asset has futures contracts. have_options Indicates if the asset has options contracts. higher_circuit_limit The higher circuit limit of the asset. instrument_name The name of the instrument. instrument_token The token or identifier of the instrument. instrument_type The type of the instrument. is_index Indicates if the asset is an index. is_mtf_eligible Indicates if the asset is eligible for MTF (market to franchise) trading. isin The ISIN (International Securities Identification Number) of the asset. issue_maturity_date The maturity date of the issued asset. issue_rate The rate at which the asset was issued. issue_start_date The start date of the issuance of the asset. last_trade_vol The volume of the last trade of the asset. last_trading_date The date of the last trading of the asset. list_date The date when the asset was listed. local_update_time The local update time of the asset. lower_circuit_limit The lower circuit limit of the asset. market_type The market type of the asset. max_order_size The maximum order size of the asset. max_single_qty The maximum single quantity of the asset. month_identifier The month identifier of the asset. mtf_margin The margin for MTF trading of the asset. multiplier The multiplier of the asset. no_delivery_date_end The end date for no delivery of the asset. no_delivery_date_start The start date for no delivery of the asset. open_interest The open interest of the asset. option_type The type of the option. partition_id The partition ID of the asset. precision The precision of the asset. price_denominator The denominator of the price of the asset. price_numerator The numerator of the price of the asset. price_quotation The quotation of the price of the asset. price_units The units of the price of the asset. product_category The category of the product. product_id The ID of the product. raw_expiry The raw expiry timestamp of the asset. raw_tender_period_end_date The raw end date of the tender period of the asset. raw_tender_period_start_date The raw start date of the tender period of the asset. raw_tick_size The raw tick size of the asset. re_admission_date The readmission date of the asset. record_date The record date of the asset. series The series of the asset. short_code The short code of the asset. span The SPAN (Standard Portfolio Analysis of Risk)"},{"location":"contract_details/scrip_info/#error-response","title":"Error Response","text":"<pre><code>{\n    \"error\":{\n        \"code\": 404,\n        \"message\": \"Resource Not Found\"\n    }\n    \"result\": \"\"\n}\n</code></pre>"},{"location":"contract_details/search_scrip/","title":"Search Scrip","text":"<p>In Search Scrip, detailes of searched instruments like: token, exchange, company name, display name etc. is showed.</p>"},{"location":"contract_details/search_scrip/#python-code","title":"Python Code","text":"<pre><code>pocket.searchScrip(Parameters)\n</code></pre>"},{"location":"contract_details/search_scrip/#parameters","title":"Parameters","text":"<p>Takes instrument name as input parameter.</p>"},{"location":"contract_details/search_scrip/#example","title":"Example","text":"<pre><code>data = obj.searchScrip('Bank Nifty')\n</code></pre>"},{"location":"contract_details/search_scrip/#response","title":"Response","text":"<pre><code>{\n  \"error\": {\n    \"code\": 0,\n    \"message\": \"\"\n  },\n  \"result\": [\n    {\n      \"token\": \"26009\",\n      \"exchange\": \"NSE\",\n      \"company\": \"Nifty Bank\",\n      \"symbol\": \"Nifty Bank\",\n      \"trading_symbol\": \"Nifty Bank\",\n      \"display_name\": \"Nifty Bank\",\n      \"score\": 0.24,\n      \"close_price\": \"\",\n      \"is_tradable\": false,\n      \"segment\": \"Indices\",\n      \"tag\": \"\",\n      \"expiry\": \"\",\n      \"alternate\": {}\n    },\n    {\n      \"token\": \"7361\",\n      \"exchange\": \"NSE\",\n      \"company\": \"SBI-ETF NIFTY BANK\",\n      \"symbol\": \"SETFNIFBK\",\n      \"trading_symbol\": \"SETFNIFBK-EQ\",\n      \"display_name\": \"SETFNIFBK\",\n      \"score\": 0.210088,\n      \"isin\": \"INF200KA1580\",\n      \"close_price\": \"477.73\",\n      \"is_tradable\": true,\n      \"segment\": \"Equity\",\n      \"tag\": \"ETF\",\n      \"expiry\": \"\",\n      \"alternate\": {\n        \"token\": \"199116\",\n        \"exchange\": \"BSE\",\n        \"company\": \"INAV SBI-ETF NIFTY BANK\",\n        \"symbol\": \"SETFNIFINAV\",\n        \"trading_symbol\": \"SETFNIFINAV-B\",\n        \"display_name\": \"SETFNIFINAV\",\n        \"isin\": \"INF200KA1580\",\n        \"segment\": \"Equity\"\n      }\n    },\n    {\n      \"token\": \"199116\",\n      \"exchange\": \"BSE\",\n      \"company\": \"INAV SBI-ETF NIFTY BANK\",\n      \"symbol\": \"SETFNIFINAV\",\n      \"trading_symbol\": \"SETFNIFINAV-B\",\n      \"display_name\": \"SETFNIFINAV\",\n      \"score\": 0.190087,\n      \"isin\": \"INF200KA1580\",\n      \"close_price\": \"\",\n      \"is_tradable\": true,\n      \"segment\": \"Equity\",\n      \"tag\": \"\",\n      \"expiry\": \"\",\n      \"alternate\": {\n        \"token\": \"7361\",\n        \"exchange\": \"NSE\",\n        \"company\": \"SBI-ETF NIFTY BANK\",\n        \"symbol\": \"SETFNIFBK\",\n        \"trading_symbol\": \"SETFNIFBK-EQ\",\n        \"display_name\": \"SETFNIFBK\",\n        \"isin\": \"INF200KA1580\",\n        \"close_price\": \"477.73\",\n        \"segment\": \"Equity\"\n      }\n    },\n    {\n      \"token\": \"26025\",\n      \"exchange\": \"NSE\",\n      \"company\": \"Nifty PSU Bank\",\n      \"symbol\": \"Nifty PSU Bank\",\n      \"trading_symbol\": \"Nifty PSU Bank\",\n      \"display_name\": \"Nifty PSU Bank\",\n      \"score\": 0,\n      \"close_price\": \"\",\n      \"is_tradable\": false,\n      \"segment\": \"Indices\",\n      \"tag\": \"\",\n      \"expiry\": \"\",\n      \"alternate\": {}\n    },\n    {\n      \"token\": \"26047\",\n      \"exchange\": \"NSE\",\n      \"company\": \"Nifty Pvt Bank\",\n      \"symbol\": \"Nifty Pvt Bank\",\n      \"trading_symbol\": \"Nifty Pvt Bank\",\n      \"display_name\": \"Nifty Pvt Bank\",\n      \"score\": 0,\n      \"close_price\": \"\",\n      \"is_tradable\": false,\n      \"segment\": \"Indices\",\n      \"tag\": \"\",\n      \"expiry\": \"\",\n      \"alternate\": {}\n    }\n  ]\n}\n</code></pre> Key Description error Contains error details, if any, encountered during the API request. code The error code. message The error message. result Contains an array of objects representing information about stocks or assets. token The unique identifier/token of the stock. exchange The exchange where the stock is traded. company The name of the company associated with the stock. symbol The symbol of the stock. trading_symbol The trading symbol of the stock. display_name The display name of the stock. score The score associated with the stock. isin The ISIN (International Securities Identification Number) of the stock. close_price The closing price of the stock. is_tradable Indicates if the stock is tradable. segment The segment to which the stock belongs (e.g., Equity). tag Any additional tag or label associated with the stock. expiry The expiry date of the stock, if applicable. alternate Contains information about an alternate trading option for the stock, such as trading on a different exchange."},{"location":"contract_details/search_scrip/#error-response","title":"Error Response","text":"<pre><code>{\n    \"error\":{\n        \"code\": 0,\n        \"message\": \"\"\n    }\n    \"result\":{\n    }\n}\n</code></pre>"},{"location":"market_data/get_closingprice/","title":"Get Closing Price","text":"<p>The Get Closing Price API is allows users to retrieve the closing price of a financial instrument. By specifying the instrument token, users can access the closing price, which can be crucial for making investment decisions.</p> <pre><code>res = pocket.getClosePrice(Parameters)\n</code></pre>"},{"location":"market_data/get_closingprice/#parameters","title":"Parameters","text":"Field Name Data Type Description exchange String e.g. <code>NSE</code>, <code>BSE</code>, <code>MCX</code>, <code>CDS</code>, <code>NFO</code>, <code>BFO</code> token String e.g. <code>90197</code>"},{"location":"market_data/get_closingprice/#example","title":"Example","text":"<pre><code>response = pocket.getClosePrice('NSE', 26009)\n</code></pre>"},{"location":"market_data/get_closingprice/#response","title":"Response","text":"<pre><code>{\n    \"data\": 47965.4,\n    \"message\": \"\", \n    \"status\": \"success\"\n}\n</code></pre> Key Description data The closing price received. message Any additional message or details. status The status of the operation."},{"location":"market_data/get_closingprice/#error-response","title":"Error Response","text":"<pre><code>{\n    \"data\": {},\n    \"error_code\": 44000,\n    \"message\": \"`exchange` is invalid\",\n    \"status\": \"error\"\n}\n</code></pre>"},{"location":"market_data/get_dpr/","title":"Get DPR","text":"<p>This method is used to fetch Daily Price Range details of stock.  daily price range refers to the difference between the highest and lowest prices at which a particular stock traded during a single trading session. This range provides insights into the price volatility and trading activity of a stock over the course of a trading day.</p>"},{"location":"market_data/get_dpr/#python-code","title":"Python Code","text":"<pre><code>res = pocket.getDPRdata(Parameters)\n</code></pre>"},{"location":"market_data/get_dpr/#parameters","title":"Parameters","text":"Field Name Data Type Description exchange String e.g. <code>NSE</code>, <code>BSE</code>, <code>MCX</code>, <code>CDS</code>, <code>NFO</code>, <code>BFO</code> token String e.g. <code>3045</code>"},{"location":"market_data/get_dpr/#response","title":"Response","text":"<pre><code>{\n    \"data\": {\n        \"exchange\": \"NSE\",\n        \"exchange_timestamp\": 0,\n        \"high_dpr\": 0,\n        \"instrument_token\": 3045,\n        \"low_dpr\": 0\n    },\n    \"message\": \"\",\n    \"status\": \"success\"\n}\n</code></pre>"},{"location":"market_data/get_dpr/#error-response","title":"Error response","text":"<pre><code>{\n    \"data\": {},\n    \"message\": \"Invalid parameters\",\n    \"status\": \"error\"\n}\n</code></pre>"},{"location":"market_data/get_fnoltp/","title":"Get FnO Last Traded Price","text":"<p>To get the ltp of FnO, use the getFnoLtp method.</p> <pre><code>pocket.getFnoLtp(Parameters)\n</code></pre>"},{"location":"market_data/get_fnoltp/#parameters","title":"Parameters","text":"Field Name Data Type Description exchange String <code>NFO</code> token String e.g. <code>26009</code>"},{"location":"market_data/get_greek/","title":"Get Greek","text":"<p>\"GreekData\" typically refers to a set of metrics used in options trading to assess risk and price sensitivity. Use the greekdata method.</p> <pre><code>res = pocket.greekdata(Parameters)\n</code></pre>"},{"location":"market_data/get_greek/#parameters","title":"Parameters","text":"Field Name Data Type Description exchange String <code>NFO</code> token String e.g. <code>26009</code>"},{"location":"market_data/get_greek/#response","title":"Response","text":"<pre><code>{\n    \"data\": {\n        \"IV\": 0,\n        \"current_open_interest\": 0,\n        \"delta\": 0,\n        \"exchange\": \"NFO\",\n        \"exchange_timestamp\": 0,\n        \"gamma\": 0,\n        \"initial_open_interest\": 0,\n        \"instrument_token\": 90197,\n        \"last_trade_price\": 0,\n        \"last_trade_quantity\": 0,\n        \"last_trade_time\": 0,\n        \"rho\": 0,\n        \"theta\": 0,\n        \"trade_volume\": 0,\n        \"ul_token\": 0,\n        \"vega\": 0\n    },\n    \"message\": \"\",\n    \"status\": \"success\"\n}\n</code></pre>"},{"location":"market_data/get_greek/#error-response","title":"Error response","text":"<pre><code>{\n    \"data\": {},\n    \"message\": \"Invalid parameters\",\n    \"status\": \"error\"\n}\n</code></pre>"},{"location":"market_data/get_ltp/","title":"Get Last Traded Price","text":"<p>The Get Last Traded Price API provides users with the most recent price at which a financial instrument was traded. By accessing this API, users can quickly obtain the latest market information, aiding in real-time decision-making and market analysis.</p> <pre><code>pocket.getLtp(Parameters)\n</code></pre>"},{"location":"market_data/get_ltp/#parameters","title":"Parameters","text":"Field Name Data Type Description exchange String e.g. <code>NSE</code>, <code>BSE</code>, <code>MCX</code>, <code>CDS</code>, <code>NFO</code>, <code>BFO</code> token String e.g. <code>90197</code>"},{"location":"market_data/get_ltp/#example","title":"Example","text":"<pre><code>response = pocket.getLtp('NSE', 26009)\n</code></pre>"},{"location":"market_data/get_ltp/#response","title":"Response","text":"<pre><code>{\n    \"data\": 446981.3, \n    \"message\": \"\", \n    \"status\": \"success\"\n}\n</code></pre> Key Description data The last traded price received. message Any additional message or details. status The status of the operation."},{"location":"market_data/get_ltp/#error-response","title":"Error Response","text":"<pre><code>{\"data\": {}, \"error_code\": 44000, \"message\": \"`exchange` is invalid\", \"status\": \"error\"}\n</code></pre>"},{"location":"market_data/get_marketdata/","title":"Get Market Data","text":"<p>The getMarketData method gives the market data.</p> <pre><code>pocket.getMarketData(Parameters)\n</code></pre>"},{"location":"market_data/get_marketdata/#parameters","title":"Parameters","text":"Field Name Data Type Description exchange String e.g. <code>NSE</code>, <code>BSE</code>, <code>MCX</code>, <code>CDS</code>, <code>NFO</code>, <code>BFO</code> token String e.g. <code>90197</code>"},{"location":"market_data/get_marketdata/#example","title":"Example","text":"<pre><code>response = pocket.getMarketdata('NSE', 14366)\n</code></pre>"},{"location":"market_data/get_marketdata/#response","title":"Response","text":"<pre><code>{\n  \"data\": {\n    \"ask_price\": 1290,\n    \"ask_qty\": 1089393,\n    \"average_trade_price\": 12.97,\n    \"bid_price\": 1285,\n    \"bid_qty\": 3486991,\n    \"close_price\": 13.1,\n    \"exchange\": \"NSE\",\n    \"exchange_timestamp\": 1710486278,\n    \"high_price\": 13.3,\n    \"instrument_token\": 14366,\n    \"last_trade_price\": 12.9,\n    \"last_trade_qty\": 1,\n    \"last_trade_time\": 1710486277,\n    \"low_price\": 12.75,\n    \"open_price\": 13.15,\n    \"segment\": \"Capital\",\n    \"total_buy_qty\": 31748583,\n    \"total_sell_qty\": 40173028,\n    \"trade_volume\": 178286763,\n    \"yearly_high\": 1840,\n    \"yearly_low\": 570\n  },\n  \"message\": \"\",\n  \"status\": \"success\"\n}\n</code></pre> Key Description ask_price The price at which sellers are willing to sell the asset. ask_qty The quantity of the asset available at the ask price. average_trade_price The average price at which trades have been executed. bid_price The price at which buyers are willing to buy the asset. bid_qty The quantity of the asset available at the bid price. close_price The closing price of the asset. exchange The exchange where the asset is traded. exchange_timestamp The timestamp of the exchange's last update. high_price The highest price of the asset during the trading day. instrument_token The unique identifier of the financial instrument. last_trade_price The price at which the last trade was executed. last_trade_qty The quantity of the last trade. last_trade_time The timestamp of the last trade. low_price The lowest price of the asset during the trading day. open_price The opening price of the asset. total_buy_qty The total quantity of buy orders. total_sell_qty The total quantity of sell orders. trade_volume The total volume of trades. yearly_high The highest price of the asset in the past year. yearly_low The lowest price of the asset in the past year."},{"location":"market_data/get_marketdata/#error-response","title":"Error response","text":"<pre><code>{\n    \"data\": {},\n    \"message\": \"Invalid parameters\",\n    \"status\": \"error\"\n}\n</code></pre>"},{"location":"market_data/option_chain/","title":"Option Chain","text":""},{"location":"market_data/option_chain/#option-chain","title":"Option Chain","text":"<p>This API retrieves option chain data for the chosen instrument. Within the query parameters, \"token\" denotes the instrument token of the selected asset. The \"num\" parameter specifies the quantity of options for a specific expiry, while \"price\" serves as the reference point for the strike price of the options being retrieved. For instance, if \"num\" is set to 6 and \"price\" is 506.5, the API will fetch three options above and three options below the 506.5 strike price.</p> <pre><code>optionchain = pocket.getOptionChain(token, 40, ltp)\n</code></pre>"},{"location":"market_data/option_chain/#example","title":"Example","text":"<pre><code>response = pocket.getOptionChain(26009, 1, 46363)\n</code></pre>"},{"location":"market_data/option_chain/#response","title":"Response","text":"<pre><code>{\n  \"error\": {\n    \"code\": 0,\n    \"message\": \"\"\n  },\n  \"result\": [\n    {\n      \"expiry_date\": \"20MAR24\",\n      \"strikes\": [\n        {\n          \"strike_price\": 46400,\n          \"call_option\": {\n            \"token\": \"41337\",\n            \"exchange\": \"NFO\",\n            \"company\": \"BANKNIFTY\",\n            \"symbol\": \"BANKNIFTY2432046400CE\",\n            \"trading_symbol\": \"BANKNIFTY20MAR2446400CE\",\n            \"display_name\": \"BANKNIFTY 20 MAR 24 46400 CE W\",\n            \"strike_price\": 46400,\n            \"ExpiryRaw\": \"\",\n            \"close_price\": \"703.8000000\"\n          },\n          \"put_option\": {\n            \"token\": \"41338\",\n            \"exchange\": \"NFO\",\n            \"company\": \"BANKNIFTY\",\n            \"symbol\": \"BANKNIFTY2432046400PE\",\n            \"trading_symbol\": \"BANKNIFTY20MAR2446400PE\",\n            \"display_name\": \"BANKNIFTY 20 MAR 24 46400 PE W\",\n            \"strike_price\": 46400,\n            \"ExpiryRaw\": \"\",\n            \"close_price\": \"245.6000000\"\n          }\n        },\n        {\n          \"strike_price\": 46500,\n          \"call_option\": {\n            \"token\": \"41345\",\n            \"exchange\": \"NFO\",\n            \"company\": \"BANKNIFTY\",\n            \"symbol\": \"BANKNIFTY2432046500CE\",\n            \"trading_symbol\": \"BANKNIFTY20MAR2446500CE\",\n            \"display_name\": \"BANKNIFTY 20 MAR 24 46500 CE W\",\n            \"strike_price\": 46500,\n            \"ExpiryRaw\": \"\",\n            \"close_price\": \"633.7000000\"\n          },\n          \"put_option\": {\n            \"token\": \"41346\",\n            \"exchange\": \"NFO\",\n            \"company\": \"BANKNIFTY\",\n            \"symbol\": \"BANKNIFTY2432046500PE\",\n            \"trading_symbol\": \"BANKNIFTY20MAR2446500PE\",\n            \"display_name\": \"BANKNIFTY 20 MAR 24 46500 PE W\",\n            \"strike_price\": 46500,\n            \"ExpiryRaw\": \"\",\n            \"close_price\": \"280.1000000\"\n          }\n        }\n      ]\n    },\n\n</code></pre> Key Description strike_price The strike price of the option. call_option Details of the call option associated with the specified strike price. put_option Details of the put option associated with the specified strike price. token The unique identifier/token of the option. exchange The exchange where the option is traded. company The company associated with the option. symbol The symbol or ticker of the option. trading_symbol The trading symbol of the option. display_name The display name of the option. ExpiryRaw The raw expiry timestamp of the option. close_price The closing price of the option."},{"location":"market_data/option_chain/#error-response","title":"Error Response","text":"<pre><code>{\n    \"error\": {\n        \"code\": 404,\n        \"message\": \"Invalid UnderLyingtoken: 16821\"\n    },\n    \"result\": \"\"\n}\n</code></pre>"},{"location":"order_book/fetch_completedorder/","title":"Fetch Completed Orders","text":"<p>The Completed Orders API retrieves information about orders that have been successfully executed and completed from the order book. By accessing this API, users can obtain detailed data on their past transactions, including the order ID, type of order, price, quantity, timestamp, and any associated fees. This API provides valuable insights into trading activity, allowing users to analyze their performance, track order history, and reconcile transactions efficiently. With the ability to access comprehensive information on completed orders, traders can make informed decisions, refine their strategies, and optimize their trading activities for better outcomes.</p> <pre><code>pocket.getCompletedOrderBook()    # No parameter needs to be passed\n</code></pre>"},{"location":"order_book/fetch_completedorder/#example","title":"Example","text":"<pre><code>response = pocket.getCompletedOrderBook()\n</code></pre>"},{"location":"order_book/fetch_completedorder/#response","title":"Response","text":"<pre><code>{\n    \"data\": {\n        \"orders\": [\n            {\n                \"mode\": \"NEW\",\n                \"exchange\": \"BSE\",\n                \"segment\": \"\",\n                \"login_id\": \"HI0009\",\n                \"deposit\": 0,\n                \"order_status\": \"REJECTED\",\n                \"product\": \"MIS\",\n                \"order_type\": \"LIMIT\",\n                \"rejection_reason\": \"BSECM Adapter is offline,ctcl not available \",\n                \"order_side\": \"BUY\",\n                \"instrument_token\": 532461,\n                \"exchange_time\": 0,\n                \"nnf_id\": 0,\n                \"quantity\": 1,\n                \"trading_symbol\": \"PNB-A\",\n                \"client_id\": \"HI0009\",\n                \"average_trade_price\": 0,\n                \"underlying_token\": null,\n                \"oms_order_id\": \"2024030938\",\n                \"lot_size\": 1,\n                \"isin\": \"INE160A01022\",\n                \"disclosed_quantity\": 0,\n                \"execution_type\": \"BO\",\n                \"source\": \"\",\n                \"device\": \"\",\n                \"exchange_order_id\": \"\",\n                \"validity\": \"DAY\",\n                \"leg_order_indicator\": \"ENTRY\",\n                \"trade_price\": 0,\n                \"spread_token\": null,\n                \"market_protection_percentage\": 0,\n                \"filled_quantity\": 0,\n                \"order_tag\": \"\",\n                \"sl_trigger_price\": 0.0,\n                \"square_off\": false,\n                \"order_status_info\": \"\",\n                \"square_off_value\": 0.0,\n                \"tags\": null,\n                \"order_entry_time\": 1709992490,\n                \"last_activity_reference\": 0,\n                \"trigger_price\": 0,\n                \"sl_order_price\": 0.0,\n                \"stop_loss_value\": 0.0,\n                \"rejection_code\": 1009,\n                \"average_price\": 0,\n                \"trailing_stop_loss\": 0.0,\n                \"price\": 125.0,\n                \"user_order_id\": \"12778\",\n                \"symbol\": \"PNB\",\n                \"is_trailing\": false,\n                \"pro_cli\": \"CLIENT\",\n                \"remaining_quantity\": 1,\n                \"contract_description\": {},\n                \"series\": \"A\",\n                \"target_price_type\": \"absolute\",\n                \"sl_order_quantity\": 0\n            },\n            {\n                \"mode\": \"NEW\",\n                \"exchange\": \"BSE\",\n                \"segment\": \"\",\n                \"login_id\": \"HI0009\",\n                \"deposit\": 0,\n                \"order_status\": \"AMO_CANCEL_CONFIRMED\",\n                \"product\": \"CNC\",\n                \"order_type\": \"LIMIT\",\n                \"rejection_reason\": \"\",\n                \"order_side\": \"BUY\",\n                \"instrument_token\": 532461,\n                \"exchange_time\": 0,\n                \"nnf_id\": 333333333333100,\n                \"quantity\": 1,\n                \"trading_symbol\": \"PNB-A\",\n                \"client_id\": \"HI0009\",\n                \"average_trade_price\": 0,\n                \"underlying_token\": null,\n                \"oms_order_id\": \"2024030935\",\n                \"lot_size\": 1,\n                \"isin\": \"INE160A01022\",\n                \"disclosed_quantity\": 0,\n                \"execution_type\": \"AMO\",\n                \"source\": \"pacetrader.pacefin.in\",\n                \"device\": \"android\",\n                \"exchange_order_id\": \"\",\n                \"validity\": \"DAY\",\n                \"leg_order_indicator\": null,\n                \"trade_price\": 0,\n                \"spread_token\": null,\n                \"market_protection_percentage\": 0,\n                \"filled_quantity\": 0,\n                \"order_tag\": \"\",\n                \"sl_trigger_price\": 0.0,\n                \"square_off\": false,\n                \"order_status_info\": \"\",\n                \"square_off_value\": 0.0,\n                \"tags\": null,\n                \"order_entry_time\": 1709992420,\n                \"last_activity_reference\": 0,\n                \"trigger_price\": 0,\n                \"sl_order_price\": 0.0,\n                \"stop_loss_value\": 0.0,\n                \"rejection_code\": 0,\n                \"average_price\": 0,\n                \"trailing_stop_loss\": 0.0,\n                \"price\": 125.0,\n                \"user_order_id\": \"12776\",\n                \"symbol\": \"PNB\",\n                \"is_trailing\": false,\n                \"pro_cli\": \"CLIENT\",\n                \"remaining_quantity\": 0,\n                \"contract_description\": {},\n                \"series\": \"A\",\n                \"target_price_type\": \"absolute\",\n                \"sl_order_quantity\": 0\n            },\n            {\n                \"mode\": \"NEW\",\n                \"exchange\": \"NSE\",\n                \"segment\": \"\",\n                \"login_id\": \"HI0009\",\n                \"deposit\": 0,\n                \"order_status\": \"REJECTED\",\n                \"product\": \"MIS\",\n                \"order_type\": \"LIMIT\",\n                \"rejection_reason\": \" blocked by broker\",\n                \"order_side\": \"BUY\",\n                \"instrument_token\": 20114,\n                \"exchange_time\": 1709992322,\n                \"nnf_id\": 333333333333100,\n                \"quantity\": 1,\n                \"trading_symbol\": \"GREENPOWER-BE\",\n                \"client_id\": \"HI0009\",\n                \"average_trade_price\": 0,\n                \"underlying_token\": null,\n                \"oms_order_id\": \"2024030931\",\n                \"lot_size\": 1,\n                \"isin\": \"INE999K01014\",\n                \"disclosed_quantity\": 0,\n                \"execution_type\": \"AMO\",\n                \"source\": \"pacetrader.pacefin.in\",\n                \"device\": \"android\",\n                \"exchange_order_id\": \"\",\n                \"validity\": \"DAY\",\n                \"leg_order_indicator\": null,\n                \"trade_price\": 0,\n                \"spread_token\": null,\n                \"market_protection_percentage\": 0,\n                \"filled_quantity\": 0,\n                \"order_tag\": \"\",\n                \"sl_trigger_price\": 0.0,\n                \"square_off\": false,\n                \"order_status_info\": \"\",\n                \"square_off_value\": 0.0,\n                \"tags\": null,\n                \"order_entry_time\": 1709992322,\n                \"last_activity_reference\": 0,\n                \"trigger_price\": 0,\n                \"sl_order_price\": 0.0,\n                \"stop_loss_value\": 0.0,\n                \"rejection_code\": 1010,\n                \"average_price\": 0,\n                \"trailing_stop_loss\": 0.0,\n                \"price\": 20.0,\n                \"user_order_id\": \"12774\",\n                \"symbol\": \"GREENPOWER\",\n                \"is_trailing\": false,\n                \"pro_cli\": \"CLIENT\",\n                \"remaining_quantity\": 0,\n                \"contract_description\": {},\n                \"series\": \"BE\",\n                \"target_price_type\": \"absolute\",\n                \"sl_order_quantity\": 0\n            },\n            {\n                \"mode\": \"NEW\",\n                \"exchange\": \"NSE\",\n                \"segment\": \"\",\n                \"login_id\": \"HI0009\",\n                \"deposit\": 0,\n                \"order_status\": \"REJECTED\",\n                \"product\": \"MIS\",\n                \"order_type\": \"LIMIT\",\n                \"rejection_reason\": \"NSECM Adapter is offline,ctcl not available \",\n                \"order_side\": \"BUY\",\n                \"instrument_token\": 13342,\n                \"exchange_time\": 0,\n                \"nnf_id\": 0,\n                \"quantity\": 1,\n                \"trading_symbol\": \"VAKRANGEE-EQ\",\n                \"client_id\": \"HI0009\",\n                \"average_trade_price\": 0,\n                \"underlying_token\": null,\n                \"oms_order_id\": \"2024030927\",\n                \"lot_size\": 1,\n                \"isin\": \"INE051B01021\",\n                \"disclosed_quantity\": 0,\n                \"execution_type\": \"CO\",\n                \"source\": \"\",\n                \"device\": \"\",\n                \"exchange_order_id\": \"\",\n                \"validity\": \"DAY\",\n                \"leg_order_indicator\": \"ENTRY\",\n                \"trade_price\": 0,\n                \"spread_token\": null,\n                \"market_protection_percentage\": 0,\n                \"filled_quantity\": 0,\n                \"order_tag\": \"\",\n                \"sl_trigger_price\": 0.0,\n                \"square_off\": false,\n                \"order_status_info\": \"\",\n                \"square_off_value\": 0.0,\n                \"tags\": null,\n                \"order_entry_time\": 1709991944,\n                \"last_activity_reference\": 0,\n                \"trigger_price\": 0,\n                \"sl_order_price\": 0.0,\n                \"stop_loss_value\": 0.0,\n                \"rejection_code\": 1009,\n                \"average_price\": 0,\n                \"trailing_stop_loss\": 0.0,\n                \"price\": 22.0,\n                \"user_order_id\": \"12772\",\n                \"symbol\": \"VAKRANGEE\",\n                \"is_trailing\": false,\n                \"pro_cli\": \"CLIENT\",\n                \"remaining_quantity\": 1,\n                \"contract_description\": {},\n                \"series\": \"EQ\",\n                \"target_price_type\": \"absolute\",\n                \"sl_order_quantity\": 0\n            },\n            {\n                \"mode\": \"NEW\",\n                \"exchange\": \"NSE\",\n                \"segment\": \"\",\n                \"login_id\": \"HI0009\",\n                \"deposit\": 0,\n                \"order_status\": \"COMPLETE\",\n                \"product\": \"CNC\",\n                \"order_type\": \"LIMIT\",\n                \"rejection_reason\": \"NONE\",\n                \"order_side\": \"BUY\",\n                \"instrument_token\": 910,\n                \"exchange_time\": 1709959825,\n                \"nnf_id\": 111111111111100,\n                \"quantity\": 1,\n                \"trading_symbol\": \"EICHERMOT-EQ\",\n                \"client_id\": \"HI0009\",\n                \"average_trade_price\": 0,\n                \"underlying_token\": null,\n                \"oms_order_id\": \"202403095\",\n                \"lot_size\": 1,\n                \"isin\": \"INE066A01021\",\n                \"disclosed_quantity\": 0,\n                \"execution_type\": \"REGULAR\",\n                \"source\": \"pacetrader.pacefin.in\",\n                \"device\": \"web\",\n                \"exchange_order_id\": \"1100000000004370\",\n                \"validity\": \"DAY\",\n                \"leg_order_indicator\": null,\n                \"trade_price\": 0,\n                \"spread_token\": null,\n                \"market_protection_percentage\": 0,\n                \"filled_quantity\": 1,\n                \"order_tag\": \"\",\n                \"sl_trigger_price\": 0.0,\n                \"square_off\": false,\n                \"order_status_info\": \"\",\n                \"square_off_value\": 0.0,\n                \"tags\": null,\n                \"order_entry_time\": 1709959825,\n                \"last_activity_reference\": 1394446825558528718,\n                \"trigger_price\": 0,\n                \"sl_order_price\": 0.0,\n                \"stop_loss_value\": 0.0,\n                \"rejection_code\": 0,\n                \"average_price\": 3785.25,\n                \"trailing_stop_loss\": 0.0,\n                \"price\": 3785.25,\n                \"user_order_id\": \"10002\",\n                \"symbol\": \"EICHERMOT\",\n                \"is_trailing\": false,\n                \"pro_cli\": \"CLIENT\",\n                \"remaining_quantity\": 0,\n                \"contract_description\": {},\n                \"series\": \"EQ\",\n                \"target_price_type\": \"absolute\",\n                \"sl_order_quantity\": 0\n            },\n            {\n                \"mode\": \"NEW\",\n                \"exchange\": \"NSE\",\n                \"segment\": \"\",\n                \"login_id\": \"HI0009\",\n                \"deposit\": 0,\n                \"order_status\": \"REJECTED\",\n                \"product\": \"MIS\",\n                \"order_type\": \"SLM\",\n                \"rejection_reason\": \"Order entered has invalid data, kindly contact system administrator\",\n                \"order_side\": \"BUY\",\n                \"instrument_token\": 4963,\n                \"exchange_time\": 1709959009,\n                \"nnf_id\": 111111111111100,\n                \"quantity\": 1,\n                \"trading_symbol\": \"ICICIBANK-EQ\",\n                \"client_id\": \"HI0009\",\n                \"average_trade_price\": 0,\n                \"underlying_token\": null,\n                \"oms_order_id\": \"202403094\",\n                \"lot_size\": 1,\n                \"isin\": \"INE090A01021\",\n                \"disclosed_quantity\": 0,\n                \"execution_type\": \"REGULAR\",\n                \"source\": \"pacetrader.pacefin.in\",\n                \"device\": \"web\",\n                \"exchange_order_id\": \"1100000000002524\",\n                \"validity\": \"DAY\",\n                \"leg_order_indicator\": null,\n                \"trade_price\": 0,\n                \"spread_token\": null,\n                \"market_protection_percentage\": 0,\n                \"filled_quantity\": 0,\n                \"order_tag\": \"\",\n                \"sl_trigger_price\": 0.0,\n                \"square_off\": false,\n                \"order_status_info\": \"\",\n                \"square_off_value\": 0.0,\n                \"tags\": null,\n                \"order_entry_time\": 1709959009,\n                \"last_activity_reference\": 0,\n                \"trigger_price\": 0,\n                \"sl_order_price\": 0.0,\n                \"stop_loss_value\": 0.0,\n                \"rejection_code\": 16418,\n                \"average_price\": 0,\n                \"trailing_stop_loss\": 0.0,\n                \"price\": 0,\n                \"user_order_id\": \"10002\",\n                \"symbol\": \"ICICIBANK\",\n                \"is_trailing\": false,\n                \"pro_cli\": \"CLIENT\",\n                \"remaining_quantity\": 0,\n                \"contract_description\": {},\n                \"series\": \"EQ\",\n                \"target_price_type\": \"absolute\",\n                \"sl_order_quantity\": 0\n            },\n            {\n                \"mode\": \"NEW\",\n                \"exchange\": \"NSE\",\n                \"segment\": \"\",\n                \"login_id\": \"HI0009\",\n                \"deposit\": 0,\n                \"order_status\": \"REJECTED\",\n                \"product\": \"CNC\",\n                \"order_type\": \"LIMIT\",\n                \"rejection_reason\": \"MTM Margin Available : 0.00 : Required : 282.85: AccountName: all, Template: POCKETFUL, Margin ShortFall : -282.85\",\n                \"order_side\": \"BUY\",\n                \"instrument_token\": 3063,\n                \"exchange_time\": 0,\n                \"nnf_id\": 111111111111100,\n                \"quantity\": 1,\n                \"trading_symbol\": \"VEDL-EQ\",\n                \"client_id\": \"HI0009\",\n                \"average_trade_price\": 0,\n                \"underlying_token\": null,\n                \"oms_order_id\": \"202403091\",\n                \"lot_size\": 1,\n                \"isin\": \"INE205A01025\",\n                \"disclosed_quantity\": 0,\n                \"execution_type\": \"REGULAR\",\n                \"source\": \"pacetrader.pacefin.in\",\n                \"device\": \"WEB\",\n                \"exchange_order_id\": \"\",\n                \"validity\": \"DAY\",\n                \"leg_order_indicator\": null,\n                \"trade_price\": 0,\n                \"spread_token\": null,\n                \"market_protection_percentage\": 0,\n                \"filled_quantity\": 0,\n                \"order_tag\": \"\",\n                \"sl_trigger_price\": 0.0,\n                \"square_off\": false,\n                \"order_status_info\": \"\",\n                \"square_off_value\": 0.0,\n                \"tags\": null,\n                \"order_entry_time\": 1709958939,\n                \"last_activity_reference\": 0,\n                \"trigger_price\": 0,\n                \"sl_order_price\": 0.0,\n                \"stop_loss_value\": 0.0,\n                \"rejection_code\": 12001,\n                \"average_price\": 0,\n                \"trailing_stop_loss\": 0.0,\n                \"price\": 282.85,\n                \"user_order_id\": \"10002\",\n                \"symbol\": \"VEDL\",\n                \"is_trailing\": false,\n                \"pro_cli\": \"CLIENT\",\n                \"remaining_quantity\": 1,\n                \"contract_description\": {},\n                \"series\": \"EQ\",\n                \"target_price_type\": \"absolute\",\n                \"sl_order_quantity\": 0\n            }\n        ]\n    },\n    \"message\": \"\",\n    \"status\": \"success\"\n}\n</code></pre> Key Description data Container for order data. orders An array containing individual order objects. mode Indicates the status of the order, e.g., \"NEW.\" exchange The stock exchange where the order is placed, e.g., \"BSE\" or \"NSE.\" segment The trading segment, if applicable. login_id Unique identifier for the user or client. deposit The deposit amount associated with the order. order_status The current status of the order, e.g., \"REJECTED\" or \"COMPLETE.\" product The product type, such as \"MIS,\" \"CNC,\" etc. order_type The type of order, e.g., \"LIMIT,\" \"SLM,\" etc. rejection_reason The reason for order rejection, if applicable. order_side The side of the order, e.g., \"BUY\" or \"SELL.\" instrument_token Token representing the financial instrument. exchange_time The timestamp from the exchange. nnf_id Unique identifier for the order in the NNF system. quantity The quantity of the order. trading_symbol The trading symbol associated with the order. client_id Unique identifier for the client. average_trade_price The average trade price, if applicable. underlying_token Token representing the underlying asset. oms_order_id Order ID in the Order Management System. lot_size The lot size associated with the order. isin ISIN (International Securities Identification Number) of the instrument. disclosed_quantity The disclosed quantity, if applicable. execution_type The type of execution, e.g., \"BO,\" \"AMO,\" etc. source The source of the order, e.g., \"pacetrader.pacefin.in.\" device The device through which the order is placed, e.g., \"android\" or \"WEB.\" exchange_order_id Order ID assigned by the exchange. validity The validity period of the order, e.g., \"DAY.\" leg_order_indicator Indicator for leg orders. trade_price The trade price associated with the order. spread_token Token representing spread orders. market_protection_percentage Market protection percentage, if applicable. filled_quantity The quantity of the order that has been filled. order_tag Additional tag or label for the order. sl_trigger_price Trigger price for stop-loss orders. square_off Indicates if the order is a square-off order. order_status_info Additional information about the order status. square_off_value Value associated with square-off orders. tags Additional tags associated with the order. order_entry_time The timestamp when the order was entered. last_activity_reference Reference to the last activity related to the order. trigger_price Trigger price for the order. sl_order_price Price for stop-loss orders. stop_loss_value Value associated with stop-loss orders. rejection_code Code indicating the reason for order rejection. average_price The average price associated with the order. trailing_stop_loss Value for trailing stop-loss orders. price The price specified in the order. user_order_id User-specific order identifier. symbol The symbol or ticker of the financial instrument. is_trailing Indicates if the order has trailing stop-loss. pro_cli Professional client designation. remaining_quantity The remaining quantity of the order to be filled. contract_description Description of the contract, if applicable. series The series of the instrument, if applicable. target_price_type Type of target price, e.g., \"absolute.\" sl_order_quantity Quantity specified for stop-loss orders."},{"location":"order_book/fetch_completedorder/#error-response","title":"Error Response","text":"<pre><code>{\n    \"status\": \"error\",\n    \"message\": \"Request forbidden\",\n    \"error_code\": 40000,\n    \"data\":{\n    }\n}\n</code></pre>"},{"location":"order_book/fetch_pendingorder/","title":"Fetch Pending Orders","text":"<p>The Pending Orders API retrieves information about orders that are currently pending and yet to be executed from the order book. By utilizing this API, users can access essential details regarding their outstanding orders, including the order ID, order type, price, quantity, and timestamp of placement. This API enables traders to monitor their pending orders in real-time, facilitating effective order management and decision-making. By staying informed about pending orders, users can adjust their strategies, modify existing orders, or place new ones as needed to capitalize on market opportunities.</p> <pre><code>res = pocket.getPendingOrderBook()    # No parameter needs to be passed\n</code></pre>"},{"location":"order_book/fetch_pendingorder/#example","title":"Example","text":"<pre><code>response = pocket.getCompletedOrderBook()\n</code></pre>"},{"location":"order_book/fetch_pendingorder/#response","title":"Response","text":"<pre><code>{\n    \"data\": {\n        \"orders\": [\n            {\n                \"mode\": \"NEW\",\n                \"exchange\": \"NFO\",\n                \"segment\": \"\",\n                \"login_id\": \"HI0009\",\n                \"deposit\": 0,\n                \"order_status\": \"AMO_MODIFY_CONFIRMED\",\n                \"product\": \"NRML\",\n                \"order_type\": \"LIMIT\",\n                \"rejection_reason\": \"\",\n                \"order_side\": \"BUY\",\n                \"instrument_token\": 100803,\n                \"exchange_time\": 1709996020,\n                \"nnf_id\": 333333333333100,\n                \"quantity\": 1500,\n                \"trading_symbol\": \"COFORGE24MAR5700PE\",\n                \"client_id\": \"HI0009\",\n                \"average_trade_price\": 0,\n                \"underlying_token\": null,\n                \"oms_order_id\": \"2024030943\",\n                \"lot_size\": 150,\n                \"isin\": \"\",\n                \"disclosed_quantity\": 0,\n                \"execution_type\": \"AMO\",\n                \"source\": \"pacetrader.pacefin.in\",\n                \"device\": \"android\",\n                \"exchange_order_id\": \"\",\n                \"validity\": \"DAY\",\n                \"leg_order_indicator\": null,\n                \"trade_price\": 0,\n                \"spread_token\": null,\n                \"market_protection_percentage\": 0,\n                \"filled_quantity\": 0,\n                \"order_tag\": \"\",\n                \"sl_trigger_price\": 0.0,\n                \"square_off\": false,\n                \"order_status_info\": \"\",\n                \"square_off_value\": 0.0,\n                \"tags\": null,\n                \"order_entry_time\": 1709995984,\n                \"last_activity_reference\": 0,\n                \"trigger_price\": 0,\n                \"sl_order_price\": 0.0,\n                \"stop_loss_value\": 0.0,\n                \"rejection_code\": 0,\n                \"average_price\": 0,\n                \"trailing_stop_loss\": 0.0,\n                \"price\": 30.7,\n                \"user_order_id\": \"12780\",\n                \"symbol\": \"COFORGE\",\n                \"is_trailing\": false,\n                \"pro_cli\": \"CLIENT\",\n                \"remaining_quantity\": 1500,\n                \"contract_description\": {},\n                \"series\": \"OPTSTK\",\n                \"target_price_type\": \"absolute\",\n                \"sl_order_quantity\": 0\n            },\n            {\n                \"mode\": \"NEW\",\n                \"exchange\": \"NSE\",\n                \"segment\": \"\",\n                \"login_id\": \"HI0009\",\n                \"deposit\": 0,\n                \"order_status\": \"AMO_REQ_RECEIVED\",\n                \"product\": \"MIS\",\n                \"order_type\": \"LIMIT\",\n                \"rejection_reason\": \"\",\n                \"order_side\": \"BUY\",\n                \"instrument_token\": 13342,\n                \"exchange_time\": 0,\n                \"nnf_id\": 333333333333100,\n                \"quantity\": 1,\n                \"trading_symbol\": \"VAKRANGEE-EQ\",\n                \"client_id\": \"HI0009\",\n                \"average_trade_price\": 0,\n                \"underlying_token\": null,\n                \"oms_order_id\": \"2024030930\",\n                \"lot_size\": 1,\n                \"isin\": \"INE051B01021\",\n                \"disclosed_quantity\": 0,\n                \"execution_type\": \"AMO\",\n                \"source\": \"pacetrader.pacefin.in\",\n                \"device\": \"android\",\n                \"exchange_order_id\": \"\",\n                \"validity\": \"DAY\",\n                \"leg_order_indicator\": null,\n                \"trade_price\": 0,\n                \"spread_token\": null,\n                \"market_protection_percentage\": 0,\n                \"filled_quantity\": 0,\n                \"order_tag\": \"\",\n                \"sl_trigger_price\": 0.0,\n                \"square_off\": false,\n                \"order_status_info\": \"\",\n                \"square_off_value\": 0.0,\n                \"tags\": null,\n                \"order_entry_time\": 1709991971,\n                \"last_activity_reference\": 0,\n                \"trigger_price\": 0,\n                \"sl_order_price\": 0.0,\n                \"stop_loss_value\": 0.0,\n                \"rejection_code\": 0,\n                \"average_price\": 0,\n                \"trailing_stop_loss\": 0.0,\n                \"price\": 22.0,\n                \"user_order_id\": \"12773\",\n                \"symbol\": \"VAKRANGEE\",\n                \"is_trailing\": false,\n                \"pro_cli\": \"CLIENT\",\n                \"remaining_quantity\": 0,\n                \"contract_description\": {},\n                \"series\": \"EQ\",\n                \"target_price_type\": \"absolute\",\n                \"sl_order_quantity\": 0\n            },\n        ]\n    },\n    \"message\": \"\",\n    \"status\": \"success\"\n}\n</code></pre> Key Description data Container for order data. orders An array containing individual order objects. mode Indicates the status of the order, e.g., <code>NEW</code>. exchange The stock exchange where the order is placed, e.g., <code>NFO</code> or <code>NSE</code>. segment The trading segment, if applicable. login_id Unique identifier for the user or client. deposit The deposit amount associated with the order. order_status The current status of the order, e.g., <code>AMO_MODIFY_CONFIRMED</code> or <code>AMO_REQ_RECEIVED</code>. product The product type, such as <code>NRML</code>, <code>MIS</code>, <code>CNC</code>. order_type The type of order, e.g., <code>LIMIT</code>. rejection_reason The reason for order rejection, if applicable. order_side The side of the order, e.g. <code>BUY</code> or <code>SELL</code>. instrument_token Token representing the financial instrument. exchange_time The timestamp from the exchange. nnf_id Unique identifier for the order in the NNF system. quantity The quantity of the order. trading_symbol The trading symbol associated with the order. client_id Unique identifier for the client. average_trade_price The average trade price, if applicable. underlying_token Token representing the underlying asset. oms_order_id Order ID in the Order Management System. lot_size The lot size associated with the order. isin ISIN (International Securities Identification Number) of the instrument. disclosed_quantity The disclosed quantity, if applicable. execution_type The type of execution, e.g., <code>AMO</code>. source The source of the order, e.g., <code>pacetrader.pacefin.in</code>. device The device through which the order is placed, e.g., <code>Web</code>, <code>Mobile</code> exchange_order_id Order ID assigned by the exchange. validity The validity period of the order, e.g., <code>DAY</code>. leg_order_indicator Indicator for leg orders. trade_price The trade price associated with the order. spread_token Token representing spread orders. market_protection_percentage Market protection percentage, if applicable. filled_quantity The quantity of the order that has been filled. order_tag Additional tag or label for the order. sl_trigger_price Trigger price for stop-loss orders. square_off Indicates if the order is a square-off order. order_status_info Additional information about the order status. square_off_value Value associated with square-off orders. tags Additional tags associated with the order. order_entry_time The timestamp when the order was entered. last_activity_reference Reference to the last activity related to the order. trigger_price Trigger price for the order. sl_order_price Price for stop-loss orders. stop_loss_value Value associated with stop-loss orders. rejection_code Code indicating the reason for order rejection. average_price The average price associated with the order. trailing_stop_loss Value for trailing stop-loss orders. price The price specified in the order. user_order_id User-specific order identifier. symbol The symbol or ticker of the financial instrument. is_trailing Indicates if the order has trailing stop-loss. pro_cli Professional client designation. remaining_quantity The remaining quantity of the order to be filled. contract_description Description of the contract, if applicable. series The series of the instrument, if applicable. target_price_type Type of target price, e.g., <code>absolute</code>. sl_order_quantity Quantity specified for stop-loss orders."},{"location":"order_book/fetch_pendingorder/#error-response","title":"Error Response","text":"<pre><code>{\n    \"status\": \"error\",\n    \"message\": \"Request forbidden\",\n    \"error_code\": 40000,\n    \"data\":{\n    }\n}\n</code></pre>"},{"location":"order_book/order_history/","title":"Order History","text":"<p>The Order History API provides users with access to comprehensive data on past transactions recorded in the order book. This includes details such as order ID, order type, price, quantity, timestamp, and any associated fees. By utilizing this API, traders can review their complete and pending order.</p> <pre><code>res = pocket.getHistoricalOrderBook()\n</code></pre>"},{"location":"order_book/order_history/#response","title":"Response","text":"<pre><code>{\n    \"data\":{\n        \"order history\": [\n        {\n            \"avg_price\": 40672,\n            \"client_id\": \"DEMO1\",\n            \"client_order_id\": \"900005\",\n            \"created_at\": 1605683202,\n            \"disclosed_quantity\": 1,\n            \"exchange\": \"MCX\",\n            \"exchange_order_id\": \"202032300187427\",\n            \"exchange_time\": 0,\n            \"fill_quantity\": 1,\n            \"last_modified\": 1605683202477299000,\n            \"login_id\": \"DEMO1\",\n            \"modified_at\": 1605683202,\n            \"order_id\": \"63904ddd-df0c-4546-bbdc-4c21c0796f5b\",\n            \"order_mode\": \"NEW\",\n            \"order_side\": \"SELL\",\n            \"order_type\": \"LIMIT\",\n            \"price\": 40672,\n            \"product\": \"NRML\",\n            \"quantity\": 1,\n            \"reject_reason\": \"NONE\",\n            \"remaining_quantity\": 0,\n            \"segment\": \"FutOpt\",\n            \"status\": \"COMPLETE\",\n            \"symbol\": \"GOLDGUINEA\",\n            \"token\": 224417,\n            \"trigger_price\": 0,\n            \"underlying_token\": 425,\n            \"validity\": \"DAY\"\n        }]\n        \"message\": \"\",\n        \"status\": \"success\"\n    }\n}\n</code></pre> Key Description avg_price Average price of the order. client_id Unique identifier for the client. client_order_id Client-specific order identifier. created_at Timestamp indicating when the order was created. disclosed_quantity Quantity disclosed, if applicable. exchange The exchange where the order is placed. exchange_order_id Order ID assigned by the exchange. exchange_time Timestamp from the exchange. fill_quantity Quantity of the order that has been filled. last_modified Timestamp of the last modification to the order. login_id Unique identifier for the user. modified_at Timestamp of the last modification to the order. order_id Unique identifier for the order. order_mode Indicates the mode of the order, e.g., \"NEW.\" order_side Indicates the side of the order, e.g., \"SELL.\" order_type Type of order, e.g., \"LIMIT.\" price Price specified in the order. product The product type, e.g., \"NRML.\" quantity Quantity specified in the order. reject_reason Reason for order rejection, if any. remaining_quantity Remaining quantity of the order to be filled. segment Trading segment, e.g., \"FutOpt.\" status Current status of the order, e.g., \"COMPLETE.\" symbol Ticker symbol or name of the financial instrument. token Token representing the financial instrument. trigger_price Trigger price for the order. underlying_token Token representing the underlying asset. validity Validity period of the order, e.g., \"DAY.\""},{"location":"order_book/order_history/#error-response","title":"Error Response","text":"<pre><code>{\n    \"status\": \"error\",\n    \"message\": \"Request forbidden\",\n    \"error_code\": 40000,\n    \"data\":{    \n    }\n}\n</code></pre>"},{"location":"order_book/trade_book/","title":"Trade Book","text":"<p>Trade book API fetches record or log of all the trades executed by an account holder. It contains details such as the date and time of the trade, the security traded (e.g., stocks, options, futures), the quantity bought or sold, the price at which the trade was executed.</p> <pre><code>res = pocket.getTradedOrderBook()\n</code></pre>"},{"location":"order_book/trade_book/#response","title":"Response","text":"<pre><code>{\n  \"data\": {\n    \"orders\": [\n      {\n        \"mode\": \"NEW\",\n        \"exchange\": \"NSE\",\n        \"segment\": \"\",\n        \"login_id\": \"HI0009\",\n        \"deposit\": 0,\n        \"order_status\": \"CONFIRMED\",\n        \"product\": \"MIS\",\n        \"order_type\": \"LIMIT\",\n        \"rejection_reason\": \"NONE\",\n        \"order_side\": \"BUY\",\n        \"instrument_token\": 14366,\n        \"exchange_time\": 1710485885,\n        \"nnf_id\": 111111111111100,\n        \"quantity\": 1,\n        \"trading_symbol\": \"IDEA-EQ\",\n        \"client_id\": \"HI0009\",\n        \"average_trade_price\": 0,\n        \"underlying_token\": null,\n        \"oms_order_id\": \"202403152052\",\n        \"lot_size\": 1,\n        \"isin\": \"INE669E01016\",\n        \"disclosed_quantity\": 0,\n        \"execution_type\": \"REGULAR\",\n        \"source\": \"\",\n        \"device\": \"\",\n        \"exchange_order_id\": \"1100000029886168\",\n        \"validity\": \"DAY\",\n        \"leg_order_indicator\": null,\n        \"trade_price\": 0,\n        \"spread_token\": null,\n        \"market_protection_percentage\": 0,\n        \"filled_quantity\": 0,\n        \"order_tag\": \"\",\n        \"sl_trigger_price\": 0,\n        \"square_off\": false,\n        \"order_status_info\": \"\",\n        \"square_off_value\": 0,\n        \"tags\": null,\n        \"order_entry_time\": 1710485885,\n        \"last_activity_reference\": 1394972885476889600,\n        \"trigger_price\": 0,\n        \"sl_order_price\": 0,\n        \"stop_loss_value\": 0,\n        \"rejection_code\": 0,\n        \"average_price\": 0,\n        \"trailing_stop_loss\": 0,\n        \"price\": 11.9,\n        \"user_order_id\": \"10002\",\n        \"symbol\": \"IDEA\",\n        \"is_trailing\": false,\n        \"pro_cli\": \"CLIENT\",\n        \"remaining_quantity\": 1,\n        \"contract_description\": {},\n        \"series\": \"EQ\",\n        \"target_price_type\": \"absolute\",\n        \"sl_order_quantity\": 0\n      },\n    ]\n  },\n  \"message\": \"\",\n  \"status\": \"success\"\n}\n</code></pre> Key Description book_type Type of book, e.g., \"0.\" broker_id Unique identifier for the broker. client_id Unique identifier for the client. disclosed_vol Disclosed volume, if applicable. disclosed_vol_remaining Remaining disclosed volume. exchange The exchange where the order is placed. exchange_order_id Order ID assigned by the exchange. exchange_time Timestamp from the exchange. fill_number Placeholder for fill number. filled_quantity Quantity of the order that has been filled. good_till_date Timestamp indicating the good-till date, if applicable. instrument_token Token representing the financial instrument. login_id Unique identifier for the user. oms_order_id Order ID assigned by the Order Management System (OMS). order_entry_time Timestamp of the order entry. order_price Price specified in the order. order_side Indicates the side of the order, e.g., \"BUY.\" order_type Type of order, e.g., \"MARKET.\" original_vol Original order volume. pan PAN (Permanent Account Number) of the user. pro_cli Indicator for professional client status. product The product type, e.g., \"MIS.\" remaining_quantity Remaining quantity of the order to be filled. trade_number Unique identifier for the trade. trade_price Price at which the trade is executed. trade_quantity Quantity of the trade. trade_time Timestamp of the trade. trading_symbol Ticker symbol or name of the financial instrument. trigger_price Placeholder for trigger price. v_login_id Placeholder for login ID. vol_filled_today Volume filled today."},{"location":"order_book/trade_book/#error-response","title":"Error Response","text":"<pre><code>{\n    \"status\": \"error\",\n    \"message\": \"Request forbidden\",\n    \"error_code\": 40000,\n    \"data\":{\n    }\n}\n</code></pre>"},{"location":"orders/order_types/","title":"Orders: A Comprehensive Guide","text":"<p>In the dynamic world of stock trading, understanding the intricacies of different order types is essential for investors to navigate the market with confidence and precision. Each order type serves a distinct purpose, offering flexibility and control over trading activities. Let's delve into the diverse array of order types and explore their unique characteristics and applications.</p> <p>1.Standard Orders:</p> <p>Regular Order: A cornerstone of trading, the regular order, also known as a day order, instructs brokers to execute trades at prevailing market prices within the current trading session. Ideal for investors seeking immediate execution without carrying orders forward to the next day.</p> <p>Conditional Order: Conditional orders are triggered by predefined conditions, such as specific price levels or market events. These orders provide flexibility, allowing investors to automate trades based on predetermined criteria, enhancing efficiency and reducing manual intervention.</p> <p>After-Market Order: For those unable to trade during regular market hours, after-market orders offer a solution. Placed outside standard trading sessions, these orders queue for execution when the market reopens, enabling investors to capitalize on opportunities beyond traditional trading hours.</p> <p>Basket Order: Simplifying the management of multiple positions, basket orders combine various securities into a single order for simultaneous execution. This streamlined approach enhances efficiency, allowing investors to execute complex trading strategies with ease.</p> <p>Good 'Til Triggered (GTT) Order: GTT orders empower investors to set trigger prices for buy or sell orders, remaining active until the specified conditions are met. Offering flexibility and control, GTT orders enable strategic trading based on predetermined triggers, optimizing trading outcomes.</p> <p>2.Timing-Specific Orders:</p> <p>Day Order: A standard in stock trading, day orders remain active until the end of the trading day, ensuring execution within the current session. This order type is ideal for investors seeking timely execution without carrying orders forward.</p> <p>Immediate or Cancel (IOC) Order: IOC orders prioritize immediate execution, with any unfilled portion canceled instantly. This order type is suitable for investors who prioritize swift execution over price precision, particularly in fast-moving markets.</p> <p>3.Price-Specific Orders:</p> <p>Limit Order: Providing control over execution prices, limit orders specify the maximum price for buy orders or the minimum price for sell orders. This order type offers price precision, allowing investors to execute trades at predetermined levels, minimizing execution risks.</p> <p>Market Order: Market orders prioritize immediate execution at prevailing market prices. While offering prompt execution, market orders may result in execution at slightly different prices from the prevailing market rates, particularly in volatile market conditions.</p> <p>Stop-Loss (SL) Order: Designed to limit potential losses, stop-loss orders automatically trigger market orders once the stock price reaches a predetermined level. This order type protects investors from significant losses by executing trades at the best available prices.</p> <p>Stop-Loss Market (SLM) Order: Similar to stop-loss orders, SLM orders trigger market orders once the specified stop price is reached. Offering immediate execution, SLM orders protect investors from adverse price movements by executing trades promptly at prevailing market prices.</p> <p>4.Margin-Specific Orders:</p> <p>Cash and Carry (CNC) Order: CNC orders are intended for delivery-based trading, requiring investors to have sufficient funds in their accounts to cover the full purchase price of securities. This order type is suitable for investors looking to hold securities for longer periods.</p> <p>Margin Intraday Square-off (MIS) Order: MIS orders allow investors to leverage margin facilities provided by brokers for intraday trading. These orders must be squared off before the end of the trading session, making them ideal for short-term trading strategies.</p> <p>In conclusion, mastering the diverse range of stock market orders is crucial for investors to execute trades effectively and achieve their financial goals. By understanding the nuances of each order type and their applications, investors can optimize their trading strategies, minimize risks, and capitalize on market opportunities with confidence.</p>"},{"location":"orders/basket_order/add_basketinstrument/","title":"Add Basket Instrument","text":"<p>This method used to add Instrument in the created baskets. We can add only limited number of instruments in the basket and repeated instrument can't be added. Use the method addBasketInstrument.</p> <pre><code>res = pocket.addBasketInstrument(Parameters)\nprint(res)\n</code></pre>"},{"location":"orders/basket_order/add_basketinstrument/#parameters","title":"Parameters","text":"FieldName Datatype Description basket_id String Represents the unique id of basket. name String Represents the name of the basket. exchange String <code>NSE</code>, <code>BSE</code>, <code>NFO</code>, <code>CDS</code>, <code>MCX</code> instrument_token String Represents unique id of a particular instrument. client_id String Represents the unique id of user or username. order_type String <code>LIMIT</code>, <code>MARKET</code>, <code>SL</code>, <code>SLM</code> price String It can't be Zero. product String <code>CNC</code>, <code>MIS</code>, <code>NRML</code> client_id String Represents the unique id of user or username. device String <code>web</code>, <code>mobile</code> disclose_quantity Number It can't be a negative number. execution_type String <code>REGULAR</code>, <code>BO</code>, <code>CO</code>, <code>AMO</code> order_side String <code>BUY</code> or <code>SELL</code> order_type String <code>LIMIT</code>, <code>MARKET</code>, <code>SL</code>, <code>SLM</code> quantity Number It can't be Zero. series String Represents the particular series based on exchange. trading_symbol String Represents the name of the instrument. trigger_price Number It can't be zero. underlying_token Number It is the token of the base equity instrument. user_order_id Number Unique id of the order placed. validity String <code>Day</code> or <code>IOC</code>"},{"location":"orders/basket_order/add_basketinstrument/#example","title":"Example","text":"<pre><code>data = obj.addBasketInstrument({\n        \"basket_id\": \"9cd5fbc3-333b-4934-8d45-e692349b5ede\",\n        \"name\": \"Y_Basket\",\n        \"order_info\": {\n            \"client_id\": \"HI0009\",\n            \"disclosedQuantity\": 0,\n            \"exchange\": \"NSE\",\n            \"execution_type\": \"REGULAR\",\n            \"instrument_token\": 14366,\n            \"order_side\": \"BUY\",\n            \"order_type\": \"MARKET\",\n            \"price\": 0,\n            \"product\": \"MIS\",\n            \"quantity\": 1,\n            \"series\": \"EQ\",\n            \"trading_symbol\": \"IDEA-EQ\",\n            \"trigger_price\": 0,\n            \"underlying_token\": \"14366\",\n            \"validity\": \"DAY\",\n            \"user_order_id\": 10002\n        }\n     }\n)\n</code></pre>"},{"location":"orders/basket_order/add_basketinstrument/#response","title":"Response","text":"<pre><code>{\n  \"data\": {\n    \"basket_id\": \"9cd5fbc3-333b-4934-8d45-e692349b5ede\",\n    \"basket_type\": \"NORMAL\",\n    \"is_executed\": false,\n    \"login_id\": \"HI0009\",\n    \"name\": \"Y_Basket\",\n    \"order_type\": \"ALL\",\n    \"orders\": [\n      {\n        \"order_id\": \"d5950a9f-b538-458b-a3cd-1dec744cb931\",\n        \"order_info\": {\n          \"login_id\": null,\n          \"order_status\": null,\n          \"rejection_code\": 0,\n          \"exchange\": \"NSE\",\n          \"sl_trigger_price\": 0,\n          \"client_id\": \"HI0009\",\n          \"mode\": \"NEW\",\n          \"product\": \"MIS\",\n          \"rejection_reason\": \"\",\n          \"order_side\": \"BUY\",\n          \"market_protection_percentage\": 0,\n          \"nnf_id\": 0,\n          \"validity\": \"DAY\",\n          \"trading_symbol\": \"IDEA-EQ\",\n          \"trigger_price\": 0,\n          \"is_trailing\": false,\n          \"series\": \"EQ\",\n          \"lot_size\": 0,\n          \"leg_order_indicator\": null,\n          \"disclosed_quantity\": 0,\n          \"order_entry_time\": 0,\n          \"sl_order_quantity\": 0,\n          \"order_type\": \"MARKET\",\n          \"average_price\": 0,\n          \"deposit\": 0,\n          \"contract_description\": {},\n          \"average_trade_price\": 0,\n          \"oms_order_id\": \"\",\n          \"filled_quantity\": 0,\n          \"order_status_info\": \"\",\n          \"trailing_stop_loss\": null,\n          \"price\": 0,\n          \"segment\": \"\",\n          \"underlying_token\": \"14366\",\n          \"sl_order_price\": 0,\n          \"instrument_token\": 14366,\n          \"trade_price\": 0,\n          \"symbol\": \"\",\n          \"target_price_type\": \"absolute\",\n          \"execution_type\": \"REGULAR\",\n          \"quantity\": 1,\n          \"order_tag\": \"\",\n          \"spread_token\": null,\n          \"isin\": \"\",\n          \"pro_cli\": \"CLIENT\",\n          \"tags\": [],\n          \"last_activity_reference\": 0,\n          \"square_off_value\": null,\n          \"remaining_quantity\": 0,\n          \"square_off\": false,\n          \"stop_loss_value\": null,\n          \"exchange_order_id\": \"\",\n          \"exchange_time\": 0,\n          \"device\": null,\n          \"user_order_id\": 10002,\n          \"source\": null\n        }\n      }\n    ],\n    \"product_type\": \"ALL\",\n    \"sip_eligible\": false,\n    \"sip_enabled\": false\n  },\n  \"message\": \"Order added in the basket Y_Basket.\",\n  \"status\": \"success\"\n}\n\n</code></pre>"},{"location":"orders/basket_order/add_basketinstrument/#error-response","title":"Error Response","text":"<pre><code>  {\n     \"data\": {},\n     \"error_code\": 46001,\n     \"message\": \"Instrumetn already added\",\n     \"status\": \"error\"\n  }\n</code></pre>"},{"location":"orders/basket_order/create_basket/","title":"Create Basket","text":"<p>This method is used to create basket. It can create two types of basket i.e. Normal or Hedge. The Hedge Basket can have order type as LIMIT, MARKET, SL or SLM. And the product type can be CNC, MIS or NRML.</p> <pre><code>res = pocket.createBasket(Parameters)\n</code></pre>"},{"location":"orders/basket_order/create_basket/#parameters","title":"Parameters","text":"FieldName Datatype Description login_id String Represents the unique id of user or username. name String Represents the name of the basket. type String <code>NORMAL</code>, <code>HEDGE</code> product_type String <code>CNC</code>, <code>MIS</code>, <code>NRML</code> order_type String <code>LIMIT</code>, <code>MARKET</code>, <code>SL</code>, <code>SLM</code>"},{"location":"orders/basket_order/create_basket/#example","title":"Example","text":"<pre><code>response = pocket.createBasket({\"login_id\":clintId,\"name\":\"Basket1\",\"type\":\"NORMAL\",\"product_type\":\"ALL\",\"order_type\":\"ALL\"})\n</code></pre>"},{"location":"orders/basket_order/create_basket/#response","title":"Response","text":"<pre><code>{\n    \"data\": [{\n            \"basket_id\": \"723905f6-b0f6-4bf9-a4f7-b0f119d9e24f\",\n            \"basket_type\": \"NORMAL\",\n            \"is_executed\": false,\n            \"login_id\": \"HI0009\",\n            \"name\": \"Basket1\",\n            \"order_type\": \"ALL\",\n            \"orders\": [\n                {\n                    \"order_id\": \"5829e63e-f83d-423f-9327-37f6c5a0c6b5\",\n                    \"order_info\": {\n                        \"login_id\": null,\n                        \"order_status\": null,\n                        \"rejection_code\": 0,\n                        \"exchange\": \"NSE\",\n                        \"sl_trigger_price\": 0.0,\n                        \"client_id\": \"HI0009\",\n                        \"mode\": \"NEW\",\n                        \"product\": \"CNC\",\n                        \"rejection_reason\": \"\",\n                        \"order_side\": \"BUY\",\n                        \"market_protection_percentage\": 0,\n                        \"nnf_id\": 0,\n                        \"validity\": \"DAY\",\n                        \"trading_symbol\": \"VAKRANGEE-EQ\",\n                        \"trigger_price\": 0,\n                        \"is_trailing\": false,\n                        \"series\": \"EQ\",\n                        \"lot_size\": 0,\n                        \"leg_order_indicator\": null,\n                        \"disclosed_quantity\": 0,\n                        \"order_entry_time\": 0,\n                        \"sl_order_quantity\": 0,\n                        \"order_type\": \"LIMIT\",\n                        \"average_price\": 0,\n                        \"deposit\": 0,\n                        \"contract_description\": {},\n                        \"average_trade_price\": 0,\n                        \"oms_order_id\": \"\",\n                        \"filled_quantity\": 0,\n                        \"order_status_info\": \"\",\n                        \"trailing_stop_loss\": null,\n                        \"price\": 10.0,\n                        \"segment\": \"\",\n                        \"underlying_token\": \"13342\",\n                        \"sl_order_price\": 0.0,\n                        \"instrument_token\": 13342,\n                        \"trade_price\": 0,\n                        \"symbol\": \"\",\n                        \"target_price_type\": \"absolute\",\n                        \"execution_type\": \"REGULAR\",\n                        \"quantity\": 1,\n                        \"order_tag\": \"\",\n                        \"spread_token\": null,\n                        \"isin\": \"\",\n                        \"pro_cli\": \"CLIENT\",\n                        \"tags\": [],\n                        \"last_activity_reference\": 0,\n                        \"square_off_value\": null,\n                        \"remaining_quantity\": 0,\n                        \"square_off\": false,\n                        \"stop_loss_value\": null,\n                        \"exchange_order_id\": \"\",\n                        \"exchange_time\": 0,\n                        \"device\": null,\n                        \"user_order_id\": 28483,\n                        \"source\": null\n                    }\n                }\n            ],\n            \"product_type\": \"ALL\",\n            \"sip_eligible\": true,\n            \"sip_enabled\": false\n        }\n          ],\n    \"message\": \"Basket A_Basket created successfully\",\n    \"status\": \"success\"\n}\n\n</code></pre>"},{"location":"orders/basket_order/create_basket/#error-response","title":"Error Response","text":"<pre><code>{ \n  data: {}\n  error_code: 48001\n  message: \"name has already been taken\"\n  status: \"error\"\n}\n</code></pre>"},{"location":"orders/basket_order/delete_basket/","title":"Delete Basket","text":"<pre><code>res = pocket.deleteBasket(Parameters)\n</code></pre>"},{"location":"orders/basket_order/delete_basket/#parameters","title":"Parameters","text":"<p>BasketId, BasketName</p>"},{"location":"orders/basket_order/delete_basket/#example","title":"Example","text":"<pre><code>data=obj.deleteBasket({\"BasketId\":\"0d991a91-21c0-4afd-aab2-ee9131cbd2fc\",\"BasketName\":\"Basketone\"})\n</code></pre>"},{"location":"orders/basket_order/delete_basket/#response","title":"Response","text":"<pre><code>{\n  {\"status\":true,\"message\":\"SUCCESS\",\"errorcode\":\"\",\"data\":null}\n{\n    \"data\": [        \n    ],\n    \"message\": \"Basket A_Basket deleted successfully\",\n    \"status\": \"success\"\n}\n}\n\n</code></pre>"},{"location":"orders/basket_order/delete_basket/#error-response","title":"Error Response","text":"<pre><code>{\n  \"data\": {},\n  \"error_code\": 48001,\n  \"message\": \"Basket doesnt exists\",\n  \"status\": \"error\"\n}\n</code></pre>"},{"location":"orders/basket_order/delete_basketinstrument/","title":"Delete Basket Instrument","text":"<p>This Method is used to delete basket Instrument inside the basket. This requires basketId to delete the basket instrument in the basket.</p> <pre><code>pocket.deleteBasketInstrument(Parameters)\n</code></pre>"},{"location":"orders/basket_order/delete_basketinstrument/#parameters","title":"Parameters","text":"Field Name Data Type Description BasketId Integer Unique identifier for a basket. BasketName String Name of the basket. OrderId Integer Unique identifier for an order within a basket."},{"location":"orders/basket_order/delete_basketinstrument/#example","title":"Example","text":"<pre><code>data = obj.deleteBasketInstrument({\n\"BasketId\": \"9cd5fbc3-333b-4934-8d45-e692349b5ede\",\n\"BasketName\":\"Y_Basket\",\n\"OrderId\": \"d5950a9f-b538-458b-a3cd-1dec744cb931\"\n})\n</code></pre>"},{"location":"orders/basket_order/delete_basketinstrument/#response","title":"Response","text":"<pre><code>{\n    \"data\": [\n    ],\n    \"message\": \"Order remove from the basket Y_Basket.\",\n    \"status\": \"success\"\n}\n\n</code></pre>"},{"location":"orders/basket_order/edit_basketinstrument/","title":"Edit Basket Instrument","text":"<p>The method editBasketInstrument is used to edit the basket instrument present in the basket. In this we are able to edit the basket instrument details like quantity.</p> <pre><code>pocket.editBasketInstrument(\"Parameters\")\n</code></pre>"},{"location":"orders/basket_order/edit_basketinstrument/#parameters","title":"Parameters","text":"FieldName Datatype Description basket_id String Represents the unique id of basket. name String Represents the name of the basket. exchange String <code>NSE</code>, <code>BSE</code>, <code>NFO</code>, <code>CDS</code>, <code>MCX</code> instrument_token String Represents unique id of a particular instrument. client_id String Represents the unique id of user or username. order_type String <code>LIMIT</code>, <code>MARKET</code>, <code>SL</code>, <code>SLM</code> price String It can't be zero. quantity Number It can't be zero. disclose_quantity Number It can't be a negative number. validity String <code>Day</code> or <code>IOC</code> product String <code>CNC</code>, <code>MIS</code>, <code>NRML</code> trading_symbol String Represents the name of the instrument. order_side String <code>BUY</code> or <code>SELL</code> user_order_id Number Unique id underlying_token Number It is the token of the base equity instrument. series String Represents the particular series based on exchange. oms_order_id String Represents the unique id given by OMS. exchange_order_id String Represents the unique id given by the exchange. trigger_price Number It can't be zero. stop_loss_value Number It can't be zero. square_off_value Number It can't be zero. trailing_stop_loss Number It can't be zero. is_trailing Boolean <code>True</code> or <code>False</code> execution_type String <code>REGULAR</code>, <code>BO</code>, <code>CO</code>, <code>AMO</code> order_id String Represents the unique id of the order."},{"location":"orders/basket_order/edit_basketinstrument/#example","title":"Example","text":"<pre><code>{\n  \"data\": {\n    \"basket_id\": \"9cd5fbc3-333b-4934-8d45-e692349b5ede\",\n    \"basket_type\": \"NORMAL\",\n    \"is_executed\": false,\n    \"login_id\": \"HI0009\",\n    \"name\": \"Y_Basket\",\n    \"order_type\": \"ALL\",\n    \"orders\": [\n      {\n        \"order_id\": \"d5950a9f-b538-458b-a3cd-1dec744cb931\",\n        \"order_info\": {\n          \"login_id\": null,\n          \"order_status\": null,\n          \"rejection_code\": 0,\n          \"exchange\": \"NSE\",\n          \"sl_trigger_price\": 0,\n          \"client_id\": \"HI0009\",\n          \"mode\": \"NEW\",\n          \"product\": \"MIS\",\n          \"rejection_reason\": \"\",\n          \"order_side\": \"BUY\",\n          \"market_protection_percentage\": 0,\n          \"nnf_id\": 0,\n          \"validity\": \"DAY\",\n          \"trading_symbol\": \"IDEA-EQ\",\n          \"trigger_price\": 0,\n          \"is_trailing\": false,\n          \"series\": \"EQ\",\n          \"lot_size\": 0,\n          \"leg_order_indicator\": null,\n          \"disclosed_quantity\": 0,\n          \"order_entry_time\": 0,\n          \"sl_order_quantity\": 0,\n          \"order_type\": \"MARKET\",\n          \"average_price\": 0,\n          \"deposit\": 0,\n          \"contract_description\": {},\n          \"average_trade_price\": 0,\n          \"oms_order_id\": \"\",\n          \"filled_quantity\": 0,\n          \"order_status_info\": \"\",\n          \"trailing_stop_loss\": null,\n          \"price\": 0,\n          \"segment\": \"\",\n          \"underlying_token\": \"14366\",\n          \"sl_order_price\": 0,\n          \"instrument_token\": 14366,\n          \"trade_price\": 0,\n          \"symbol\": \"\",\n          \"target_price_type\": \"absolute\",\n          \"execution_type\": \"REGULAR\",\n          \"quantity\": 1,\n          \"order_tag\": \"\",\n          \"spread_token\": null,\n          \"isin\": \"\",\n          \"pro_cli\": \"CLIENT\",\n          \"tags\": [],\n          \"last_activity_reference\": 0,\n          \"square_off_value\": null,\n          \"remaining_quantity\": 0,\n          \"square_off\": false,\n          \"stop_loss_value\": null,\n          \"exchange_order_id\": \"\",\n          \"exchange_time\": 0,\n          \"device\": null,\n          \"user_order_id\": 10002,\n          \"source\": null\n        }\n      }\n    ],\n    \"product_type\": \"ALL\",\n    \"sip_eligible\": false,\n    \"sip_enabled\": false\n  },\n  \"message\": \"Order added in the basket Y_Basket.\",\n  \"status\": \"success\"\n}\n</code></pre>"},{"location":"orders/basket_order/edit_basketinstrument/#response","title":"Response","text":"<pre><code> {\n  \"data\": {\n    \"basket_id\": \"9cd5fbc3-333b-4934-8d45-e692349b5ede\",\n    \"basket_type\": \"NORMAL\",\n    \"is_executed\": false,\n    \"login_id\": \"HI0009\",\n    \"name\": \"Y_Basket\",\n    \"order_type\": \"ALL\",\n    \"orders\": [\n      {\n        \"order_id\": \"d5950a9f-b538-458b-a3cd-1dec744cb931\",\n        \"order_info\": {\n          \"login_id\": null,\n          \"order_status\": null,\n          \"rejection_code\": 0,\n          \"exchange\": \"NSE\",\n          \"sl_trigger_price\": 0,\n          \"client_id\": \"HI0009\",\n          \"mode\": \"NEW\",\n          \"product\": \"MIS\",\n          \"rejection_reason\": \"\",\n          \"order_side\": \"BUY\",\n          \"market_protection_percentage\": 0,\n          \"nnf_id\": 0,\n          \"validity\": \"DAY\",\n          \"trading_symbol\": \"IDEA-EQ\",\n          \"trigger_price\": 0,\n          \"is_trailing\": false,\n          \"series\": \"EQ\",\n          \"lot_size\": 0,\n          \"leg_order_indicator\": null,\n          \"disclosed_quantity\": 0,\n          \"order_entry_time\": 0,\n          \"sl_order_quantity\": 0,\n          \"order_type\": \"MARKET\",\n          \"average_price\": 0,\n          \"deposit\": 0,\n          \"contract_description\": {},\n          \"average_trade_price\": 0,\n          \"oms_order_id\": \"\",\n          \"filled_quantity\": 0,\n          \"order_status_info\": \"\",\n          \"trailing_stop_loss\": null,\n          \"price\": 0,\n          \"segment\": \"\",\n          \"underlying_token\": \"14366\",\n          \"sl_order_price\": 0,\n          \"instrument_token\": 14366,\n          \"trade_price\": 0,\n          \"symbol\": \"\",\n          \"target_price_type\": \"absolute\",\n          \"execution_type\": \"REGULAR\",\n          \"quantity\": 1,\n          \"order_tag\": \"\",\n          \"spread_token\": null,\n          \"isin\": \"\",\n          \"pro_cli\": \"CLIENT\",\n          \"tags\": [],\n          \"last_activity_reference\": 0,\n          \"square_off_value\": null,\n          \"remaining_quantity\": 0,\n          \"square_off\": false,\n          \"stop_loss_value\": null,\n          \"exchange_order_id\": \"\",\n          \"exchange_time\": 0,\n          \"device\": null,\n          \"user_order_id\": 10002,\n          \"source\": null\n        }\n      }\n    ],\n    \"product_type\": \"ALL\",\n    \"sip_eligible\": false,\n    \"sip_enabled\": false\n  },\n  \"message\": \"Order added in the basket Y_Basket.\",\n  \"status\": \"success\"\n}\n</code></pre>"},{"location":"orders/basket_order/edit_basketinstrument/#error-response","title":"Error Response","text":"<pre><code> {\n  \"data\": {},\n  \"error_code\": 48004,\n  \"message\": \"`order_info` order price cannot be zero in SL/LIMIT order\",\n  \"status\": \"error\"\n}\n</code></pre>"},{"location":"orders/basket_order/execute_basket/","title":"Execute Basket","text":"<p>This method is used to execute the orders of the instruments present in the basket.</p> <pre><code>pocket.ExecuteBasket(\"Parameters\")\n</code></pre>"},{"location":"orders/basket_order/execute_basket/#parameters","title":"Parameters","text":"FieldName Datatype Description basket_id String Represents the unique id of the basket. execution_type String <code>REGULAR</code>, <code>LIMIT</code>, <code>MARKET</code> name String Represents the name of the basket. square_off Boolean <code>TRUE</code> or <code>FALSE</code>"},{"location":"orders/basket_order/execute_basket/#response","title":"Response","text":"<pre><code>{\n\n  \"data\": {\n    \"data\": {\n    \"basket_id\": \"20211017-4\",\n    \"message\": \"basket Order Placed Successfully\"\n    }\n  },\n    \"message\": \"Order place successfully\",\n    \"status\": \"success\"\n}\n</code></pre>"},{"location":"orders/basket_order/execute_basket/#error-response","title":"Error Response","text":"<pre><code>{\n    \"data\":{},\n    \"error_code\":49002,\n    \"message\":\"instrument `SBIN-EQ` is disabled for hedging\",\n    \"status\":\"error\"\n}\n</code></pre>"},{"location":"orders/basket_order/fetch_basket/","title":"Fetch Basket","text":"<p>This method used to fetch details of the basket order like basketId, basket type, name, login Id etc. It displays total number of baskets created along with the added instrument details.</p> <pre><code>pocket.fetchBasket()    #No params\n</code></pre>"},{"location":"orders/basket_order/fetch_basket/#example","title":"Example","text":"<pre><code>response = pocket.fetchBasket()        # No params needs to be passed.\n</code></pre>"},{"location":"orders/basket_order/fetch_basket/#response","title":"Response","text":"<pre><code>{\n        \"data\": [\n            {\n                \"basketId\": \"723905f6-b0f6-4bf9-a4f7-b0f119d9e24f\",\n                \"basketType\": \"NORMAL\",\n                \"isExecuted\": false,\n                \"loginId\": \"HI0009\",\n                \"name\": \"pockbask\",\n                \"orderType\": \"ALL\",\n                \"orders\": [\n                    {\n                        \"orderId\": \"5829e63e-f83d-423f-9327-37f6c5a0c6b5\",\n                        \"orderInfo\": {\n                            \"triggerPrice\": 0,\n                            \"underlyingToken\": \"13342\",\n                            \"series\": \"EQ\",\n                            \"userOrderId\": 28483,\n                            \"exchange\": \"NSE\",\n                            \"squareOff\": false,\n                            \"mode\": \"NEW\",\n                            \"remainingQuantity\": 0,\n                            \"averageTradePrice\": 0,\n                            \"tradePrice\": 0,\n                            \"orderTag\": \"\",\n                            \"orderStatusInfo\": \"\",\n                            \"orderSide\": \"BUY\",\n                            \"squareOffValue\": 0,\n                            \"contractDescription\": {},\n                            \"segment\": \"\",\n                            \"clientId\": \"HI0009\",\n                            \"tradingSymbol\": \"VAKRANGEE-EQ\",\n                            \"rejectionCode\": 0,\n                            \"lotSize\": 0,\n                            \"quantity\": 1,\n                            \"lastActivityReference\": 0,\n                            \"nnfId\": 0,\n                            \"proCli\": \"CLIENT\",\n                            \"price\": 10,\n                            \"orderType\": \"LIMIT\",\n                            \"validity\": \"DAY\",\n                            \"targetPriceType\": \"absolute\",\n                            \"instrumentToken\": 13342,\n                            \"slTriggerPrice\": 0,\n                            \"isTrailing\": false,\n                            \"slOrderQuantity\": 0,\n                            \"orderEntryTime\": 0,\n                            \"exchangeTime\": 0,\n                            \"legOrderIndicator\": null,\n                            \"trailingStopLoss\": 0,\n                            \"loginId\": null,\n                            \"omsOrderId\": \"\",\n                            \"marketProtectionPercentage\": 0,\n                            \"executionType\": \"REGULAR\",\n                            \"disclosedQuantity\": 0,\n                            \"rejectionReason\": \"\",\n                            \"stopLossValue\": 0,\n                            \"device\": null,\n                            \"product\": \"CNC\",\n                            \"slOrderPrice\": 0,\n                            \"filledQuantity\": 0,\n                            \"exchangeOrderId\": \"\",\n                            \"deposit\": 0,\n                            \"averagePrice\": 0,\n                            \"spreadToken\": null,\n                            \"orderStatus\": null\n                        }\n                    }\n                ],\n                \"productType\": \"ALL\",\n                \"sipEligible\": true,\n                \"sipEnabled\": false\n            },\n            {\n                \"basketId\": \"f67ec77b-81a7-4b4e-b45d-16ce949ecb09\",\n                \"basketType\": \"NORMAL\",\n                \"isExecuted\": false,\n                \"loginId\": \"HI0009\",\n                \"name\": \"basket_test1\",\n                \"orderType\": \"ALL\",\n                \"orders\": [\n                    {\n                        \"orderId\": \"d69bd238-3731-49a0-b54a-8ce770a63af8\",\n                        \"orderInfo\": {\n                            \"triggerPrice\": 0,\n                            \"underlyingToken\": \"14366\",\n                            \"series\": \"EQ\",\n                            \"userOrderId\": 10002,\n                            \"exchange\": \"NSE\",\n                            \"squareOff\": false,\n                            \"mode\": \"NEW\",\n                            \"remainingQuantity\": 0,\n                            \"averageTradePrice\": 0,\n                            \"tradePrice\": 0,\n                            \"orderTag\": \"\",\n                            \"orderStatusInfo\": \"\",\n                            \"orderSide\": \"BUY\",\n                            \"squareOffValue\": 0,\n                            \"contractDescription\": {},\n                            \"segment\": \"\",\n                            \"clientId\": \"HI0009\",\n                            \"tradingSymbol\": \"IDEA-EQ\",\n                            \"rejectionCode\": 0,\n                            \"lotSize\": 0,\n                            \"quantity\": 1,\n                            \"lastActivityReference\": 0,\n                            \"nnfId\": 0,\n                            \"proCli\": \"CLIENT\",\n                            \"price\": 13.75,\n                            \"orderType\": \"LIMIT\",\n                            \"validity\": \"DAY\",\n                            \"targetPriceType\": \"absolute\",\n                            \"instrumentToken\": 14366,\n                            \"slTriggerPrice\": 0,\n                            \"isTrailing\": false,\n                            \"slOrderQuantity\": 0,\n                            \"orderEntryTime\": 0,\n                            \"exchangeTime\": 0,\n                            \"legOrderIndicator\": null,\n                            \"trailingStopLoss\": 0,\n                            \"loginId\": null,\n                            \"omsOrderId\": \"\",\n                            \"marketProtectionPercentage\": 0,\n                            \"executionType\": \"REGULAR\",\n                            \"disclosedQuantity\": 0,\n                            \"rejectionReason\": \"\",\n                            \"stopLossValue\": 0,\n                            \"device\": null,\n                            \"product\": \"CNC\",\n                            \"slOrderPrice\": 0,\n                            \"filledQuantity\": 0,\n                            \"exchangeOrderId\": \"\",\n                            \"deposit\": 0,\n                            \"averagePrice\": 0,\n                            \"spreadToken\": null,\n                            \"orderStatus\": null\n                        }\n                    }\n                ],\n                \"productType\": \"ALL\",\n                \"sipEligible\": true,\n                \"sipEnabled\": false\n            }\n</code></pre>"},{"location":"orders/basket_order/fetch_basket/#error-response","title":"Error Response","text":"<pre><code> {\n    \"data\": {},\n    \"error_code\": 48001,\n    \"message\": \"`order_info` Hedge basket feature enabled only for NIFTY 50 &amp; NIFTY BANK as underlying\",\n    \"status\": \"error\"\n }\n</code></pre>"},{"location":"orders/basket_order/rename_basket/","title":"Rename Basket","text":"<p>This method is used to rename the existing basket.</p> <pre><code>res = pocket.renameBasket(Parameters)\n</code></pre>"},{"location":"orders/basket_order/rename_basket/#parameters","title":"Parameters","text":"FieldName Datatype Description basket_id String Represents the unique id of the basket. name String Represents the name of the basket."},{"location":"orders/basket_order/rename_basket/#example","title":"Example","text":"<pre><code>response = pocket.renameBasket({\"basket_id\":\"9cd5fbc3-333b-4934-8d45-e692349b5ede\",\"name\":\"Basket2\"})\n</code></pre>"},{"location":"orders/basket_order/rename_basket/#response","title":"Response","text":"<pre><code>{\"data\": {\"basket_id\": \"9cd5fbc3-333b-4934-8d45-e692349b5ede\", \"basket_type\": \"NORMAL\", \"is_executed\": false, \"login_id\": \"HI0009\", \"name\": \"Basket2\", \"order_type\": \"ALL\", \"orders\": [], \"product_type\": \"ALL\", \"sip_eligible\": true, \"sip_enabled\": false}, \"message\": \"Basket name updated successfully\", \"status\": \"success\"}\n</code></pre>"},{"location":"orders/basket_order/rename_basket/#error-response","title":"Error Response","text":"<pre><code>{\n  \"data\": {},\n  \"error_code\": 48001,\n  \"message\": \"`name` Basket name restricted to 20 characters\",\n  \"status\": \"error\"\n}\n</code></pre>"},{"location":"orders/conditional_order/BO_CO/","title":"Bracket Order & Cover Order","text":"<p>Bracket Orders (BO) and Cover Orders (CO) are advanced order types in stock trading that streamline trade management and enhance risk management.</p>"},{"location":"orders/conditional_order/BO_CO/#bracket-orders-bo","title":"Bracket Orders (BO):","text":"<p>BO combines entry, profit target, and stop-loss orders into a single package. Entry order initiates the trade, profit target sets the desired profit level, and stop-loss limits potential losses. It offers a predefined risk-reward ratio and automates trade management, optimizing outcomes.</p>"},{"location":"orders/conditional_order/BO_CO/#cover-orders-co","title":"Cover Orders (CO):","text":"<p>CO integrates entry and stop-loss orders. Entry order enables trade entry, while stop-loss order protects against adverse price movements. CO focuses on risk management, providing built-in protection against losses without constant monitoring. In short, BO and CO are powerful tools for traders, offering efficient trade execution and robust risk management, allowing investors to trade with confidence and precision.</p>"},{"location":"orders/conditional_order/cancel_BOorder/","title":"Cancel Bracket Order","text":"<p>The Cancel Order API lets users cancel an open or pending bracket order. If you want to cancel a pending bracket order in the order book, provide the oms_order_id, exchange_order_id and leg_order_indicator along with other parameters which can be obtained from the order book. Once the cancellation is done successfully, you'll get a response confirming it with a success status code. This API makes managing orders easier, allowing users to quickly remove orders when necessary, making trading more flexible and responsive.</p> <pre><code>pocket.cancelConditionalOrder(Parameters)\n</code></pre>"},{"location":"orders/conditional_order/cancel_BOorder/#parameters","title":"Parameters","text":"FieldName Datatype Description client_id String Represents the unique id of user or username. oms_order_id Number Represents the unique id of order. execution_type String BO exchange_order_id Number Represents the unique id of order. leg_order_indicator String <code>Entry</code>, <code>Second</code>, or <code>Third</code> status String <code>Confirmed</code>"},{"location":"orders/conditional_order/cancel_BOorder/#example","title":"Example","text":"<pre><code>data=obj.cancelConditionalOrder({\"client_id\":clintId,\"exchange_order_id\":\"1100000012461398\",\"execution_type\":\"BO\",\"leg_order_indicator\":\"ENTRY\", \"oms_order_id\":\"20240314929\", \"status\":\"MODIFY_CONFIRMED\"})\n</code></pre>"},{"location":"orders/conditional_order/cancel_BOorder/#response","title":"Response","text":"<pre><code>{\n    \"data\": {\n        \"basket_id\": \"\",\n        \"message\": \"Order Cancelled Successfully\"\n    },\n    \"message\": \"\",\n    \"status\": \"success\"\n}\n</code></pre>"},{"location":"orders/conditional_order/cancel_BOorder/#error-response","title":"Error Response","text":"<pre><code>{\n    \"data\": {},\n    \"error_code\": 44000,\n    \"message\": \"`exchange_order_id` can't be blank\",\n    \"status\": \"error\"\n}\n</code></pre>"},{"location":"orders/conditional_order/cancel_COorder/","title":"Cancel Cover Order","text":"<p>The Cancel Order API lets users cancel an open or pending cover order. If you want to cancel a pending cover order in the order book, provide the oms_order_id, exchange_order_id and leg_order_indicator along with other parameters which can be obtained from the order book. Once the cancellation is done successfully, you'll get a response confirming it with a success status code. This API makes managing orders easier, allowing users to quickly remove orders when necessary, making trading more flexible and responsive.</p> <pre><code>pocket.cancelConditionalOrder(Parameters)\n</code></pre>"},{"location":"orders/conditional_order/cancel_COorder/#parameters","title":"Parameters","text":"FieldName Datatype Description client_id String Represents the unique id of user oms_order_id Number Represents the unique id of order. execution_type String <code>CO</code> exchange_order_id Number Represents the unique id of order. leg_order_indicator String <code>Entry</code> or <code>Third</code>"},{"location":"orders/conditional_order/cancel_COorder/#example","title":"Example","text":"<pre><code>response = pocket.cancelConditionalOrder({\"client_id\":clintId,\"exchange_order_id\":\"1300000034566552\",\"execution_type\":\"CO\",\"leg_order_indicator\":\"ENTRY\", \"oms_order_id\":\"202403132605\"})\n</code></pre>"},{"location":"orders/conditional_order/cancel_COorder/#response","title":"Response","text":"<pre><code>{\n    \"data\": {\n        \"basket_id\": \"\",\n        \"message\": \"Order Cancelled Successfully\"\n    },\n    \"message\": \"\",\n    \"status\": \"success\"\n}\n</code></pre>"},{"location":"orders/conditional_order/cancel_COorder/#error-response","title":"Error Response","text":"<pre><code>{\n    \"data\": {},\n    \"error_code\": 44000,\n    \"message\": \"`exchange_order_id` can't be blank\",\n    \"status\": \"error\"\n}\n</code></pre>"},{"location":"orders/conditional_order/modify_BOorder/","title":"Modify Bracket Order","text":"<p>The Modify Order API enables users to make changes in the bracket order, both open and pending within the order book. To execute a modification, users must provide the oms_order_id, last_activity_reference and exchange_order_id which can be obtained from the order book. User can modify parameters like price, quantity, order type, and validity. This API facilitates efficient management of orders by allowing users to tailor their orders to meet changing market conditions or trading strategies seamlessly.</p> <pre><code>pocket.modifyConditionalOrder(Parameters)\n</code></pre>"},{"location":"orders/conditional_order/modify_BOorder/#parameters","title":"Parameters","text":"FieldName Datatype Description exchange String <code>NSE</code>, <code>BSE</code>, <code>NFO</code>, <code>CDS</code>, <code>MCX</code> instrument_token String Represents the unique id of instrument. client_id String Represents the unique id of user or username. order_type String <code>LIMIT</code>, <code>MARKET</code>, <code>SL</code>, <code>SLM</code> price Number It can't be Zero. quantity Number It can't be Zero. disclosed_quantity Number It can't be negative number. validity String <code>DAY</code>, <code>IOC</code> product String <code>CNC</code>, <code>MIS</code>, <code>NRML</code> user_order_id Number Represents the unique id of order. filled_quantity Number Number of quantity which are traded. remaining_quantity Number Number of quantity which are pending. last_activity_reference Number Unique id of Last modification. trigger_price Number It can't be Zero. stop_loss_value Number It can't be negative number. square_off_value Number It can't be negative number. trailing_stop_loss Number It can't be negative number. is_trailing Boolean <code>TRUE</code> or <code>FALSE</code> execution_type String <code>BO</code>"},{"location":"orders/conditional_order/modify_BOorder/#example","title":"Example","text":"<pre><code>data=obj.modifyConditionalOrder( {\n  \"client_id\": \"HI0009\",\n  \"disclosed_quantity\": 0,\n  \"exchange\": \"NSE\",\n  \"exchange_order_id\": \"1100000007437522\",\n  \"execution_type\": \"BO\",\n  \"filled_quantity\": 0,\n  \"instrument_token\": 14366,\n  \"is_trailing\":False,\n  \"last_activity_reference\": \"1394876196271146000\",\n  \"oms_order_id\": \"20240314659\",\n  \"order_type\": \"LIMIT\",\n  \"price\": 11.5,\n  \"quantity\": 1,\n  \"product\": \"MIS\",\n  \"remaining_quantity\": 1,\n  \"square_off_value\": 0.9,\n  \"stop_loss_value\": 0.06,\n  \"trailing_stop_loss\": 0,\n  \"trigger_price\": 0,\n  \"validity\": \"DAY\",\n})\n</code></pre>"},{"location":"orders/conditional_order/modify_BOorder/#response","title":"Response","text":"<pre><code>{\n    \"data\": {\n        \"basket_id\": \"\",\n        \"message\": \"basket Order modified Successfully\"\n    },\n    \"message\": \"Order modified successfully\",\n    \"status\": \"success\"\n}\n</code></pre>"},{"location":"orders/conditional_order/modify_BOorder/#error-response","title":"Error Response","text":"<pre><code>{\n    \"data\": {},\n    \"error_code\": 44000,\n    \"message\": \"`trigger_price` is invalid\",\n    \"status\": \"error\"\n}\n</code></pre>"},{"location":"orders/conditional_order/modify_COorder/","title":"Modify Cover Order","text":"<p>The Modify Order API enables users to make changes in the cover order, both open and pending within the order book. To execute a modification, users must provide the oms_order_id, last_activity_reference and exchange_order_id which can be obtained from the order book. User can modify parameters like price, quantity, order type, and validity. This API facilitates efficient management of orders by allowing users to tailor their orders to meet changing market conditions or trading strategies seamlessly.</p> <pre><code>pocket.modifyConditionalOrder(Parameters)\n</code></pre>"},{"location":"orders/conditional_order/modify_COorder/#parameters","title":"Parameters","text":"FieldName Datatype Description exchange String <code>NSE</code>, <code>BSE</code>, <code>NFO</code>, <code>CDS</code>, <code>MCX</code> exchange_order_id Number Order Id generated by the exchange instrument_token String Represents the unique id of instrument. client_id String Represents the unique id of user or username. order_type String <code>LIMIT</code>, <code>MARKET</code>, <code>SL</code>, <code>SLM</code> price Number It can't be Zero. quantity Number It can't be Zero. disclosed_quantity Number It can't be negative number. validity String <code>DAY</code> or <code>IOC</code> product String <code>CNC</code>, <code>MIS</code>, <code>NRML</code> oms_order_id Number Represents the oms id of order. filled_quantity Number Number of quantity which are traded. remaining_quantity Number Number of quantity which are pending. last_activity_reference Number Unique id of Last modification. stop_loss_value Number It can't be negative number. trailing_stop_loss Number It can't be negative number. execution_type String <code>CO</code>"},{"location":"orders/conditional_order/modify_COorder/#example","title":"Example","text":"<pre><code>data=obj.modifyConditionalOrder( {\n    \"exchange\":\"NSE\",\n    \"exchange_order_id\":\"1100000030285558\",\n    \"instrument_token\":14366,\n    \"client_id\":\"HI0009\",\n    \"order_type\":\"LIMIT\",\n    \"price\":12.45,\"quantity\":2,\n    \"disclosed_quantity\":0,\n    \"validity\":\"DAY\",\n    \"product\":\"CNC\",\n    \"oms_order_id\":\"202403132133\",\n    \"filled_quantity\":0,\n    \"remaining_quantity\":1,\n    \"last_activity_reference\":\"1394797204460943183\",\n    \"stop_loss_value\":12.35,\n    \"trailing_stop_loss\":0,\n    \"execution_type\":\"CO\"\n    })\n</code></pre>"},{"location":"orders/conditional_order/modify_COorder/#response","title":"Response","text":"<pre><code>{\n    \"data\": {\n        \"basket_id\": \"\",\n        \"message\": \"basket Order modified Successfully\"\n    },\n    \"message\": \"Order modified successfully\",\n    \"status\": \"success\"\n}\n</code></pre>"},{"location":"orders/conditional_order/modify_COorder/#error-response","title":"Error Response","text":"<pre><code>{\n    \"data\": {},\n    \"error_code\": 44000,\n    \"message\": \"`square_off_value` is invalid\",\n    \"status\": \"error\"\n}\n</code></pre> Error Code Description 44000 In case of any of the parameter like <code>Exchange</code>,  <code>order_type</code>, <code>product</code> being invalid <code>or</code> order price is out of DPR range. 45000 In case of Invalid <code>oms_order_id</code>, <code>price</code>, <code>last_activity_reference</code>, <code>exchange_order_id</code>  or <code>Quantity</code>. 45010 <code>Something Went Wrong</code> message occurs if you have given wrong instrument token"},{"location":"orders/conditional_order/place_BOorder/","title":"Place Bracket Order","text":"<p>A Bracket Order helps traders manage risk by placing a stop loss and a target order together with a regular order. The stop loss order protects against losses, while the target order aims for profitability in the trade.</p> <pre><code>res = pocket.placeConditionalOrder(Parameters)\nprint(res)\n</code></pre>"},{"location":"orders/conditional_order/place_BOorder/#parameters","title":"Parameters","text":"FieldName Datatype Description exchange String <code>NSE</code>, <code>BSE</code>, <code>NFO</code>, <code>CDS</code>, <code>MCX</code> instrument_token String Represents the unique id of instrument. client_id String Represents the unique id of user or username. order_type String <code>LIMIT</code>, <code>MARKET</code>, <code>SL</code>, <code>SLM</code> price Number It can't be Zero. quantity Number It can't be Zero. disclosed_quantity Number It can't be negative number. validity String <code>DAY</code>, <code>IOC</code> product String <code>CNC</code>, <code>MIS</code>, <code>NRML</code> order_side String <code>BUY</code> or <code>SELL</code> device String <code>Web</code> or <code>Mobile</code> user_order_id Number Represents the unique id of order. trigger_price Number It can't be Zero. stop_loss_value Number It can't be negative number. square_off_value Number It can't be negtive number. trailing_stop_loss Number It can't be negative number. is_trailing Boolean <code>TRUE</code> or <code>FALSE</code> execution_type String <code>BO</code>"},{"location":"orders/conditional_order/place_BOorder/#example","title":"Example","text":"<pre><code>data=obj.placeConditionalOrder( {\n    \"client_id\": clintId,\n    \"device\": \"WEB\",\n    \"disclosed_quantity\": 0,\n    \"exchange\": \"NSE\",\n    \"execution_type\": \"BO\",\n    \"instrument_token\": \"11915\",\n    \"is_trailing\": True,\n    \"order_side\": \"BUY\",\n    \"order_type\": \"LIMIT\",\n    \"price\": 18.3,\n    \"product\": \"MIS\",\n    \"quantity\": 1,\n    \"square_off_value\": 1,\n    \"stop_loss_value\": 1,\n    \"trailing_stop_loss\": \"0.05\",\n    \"trigger_price\": 0,\n    \"user_order_id\": 10002,\n    \"validity\": \"DAY\"\n})\n</code></pre>"},{"location":"orders/conditional_order/place_BOorder/#response","title":"Response","text":"<pre><code>{\n    \"data\":{\n        \"data\":{\n            \"basket_id\": \"202403132873\",\n            \"message\": \"basket Order Placed Successfully\"\n        }\n    }\n    \"message\": \"Order place successfully\",\n    \"status\": \"success\"\n }\n</code></pre>"},{"location":"orders/conditional_order/place_BOorder/#error-response","title":"Error Response","text":"<pre><code> {\n   \"data\": {},\n   \"error_code\": 44000,\n   \"message\": \"`product` is invalid\",\n   \"status\": \"error\"\n }\n</code></pre>"},{"location":"orders/conditional_order/place_COorder/","title":"Place Cover Order","text":"<p>A Cover Order helps traders protect against losses by placing a stop loss order together with a regular order. This means that if the price moves in an unexpected way, the stop loss order kicks in to limit losses. When buying a Cover Order, the limit price must be higher than the stop-loss trigger price. Conversely, when selling a Cover Order, the limit price must be lower than the stop loss trigger price.</p> <pre><code>res = pocket.placeConditionalOrder(Parameters)\nprint(res)\n</code></pre>"},{"location":"orders/conditional_order/place_COorder/#parameters","title":"Parameters","text":"FieldName Datatype Description exchange String <code>NSE</code>, <code>BSE</code>, <code>NFO</code>, <code>CDS</code>, <code>MCX</code> instrument_token String Represents the unique id of instrument. client_id String Represents the unique id of user or username. order_type String <code>LIMIT</code>, <code>MARKET</code>, <code>SL</code>, <code>SLM</code> price Number the price at which order needs to be placed quantity Number total quantity to buy disclosed_quantity Number hidden quantity from the marketnumber. validity String <code>DAY</code> or <code>IOC</code> product String <code>CNC</code>, <code>MIS</code>, <code>NRML</code> order_side String <code>BUY</code> or <code>SELL</code> device String <code>Web</code> or <code>Mobile</code> user_order_id Number Represents the unique id of order. execution_type String <code>CO</code> stop_loss_value Number value at which Sl will get hit trailing_stop_loss Number It can't be negative number."},{"location":"orders/conditional_order/place_COorder/#example","title":"Example","text":"<pre><code>response = pocket.placeConditionalOrder( {\n    \"exchange\": \"NSE\",\n    \"instrument_token\": \"14366\",\n    \"client_id\": \"clientId\",\n    \"order_type\": \"LIMIT\",\n    \"price\": 13,\n    \"quantity\": 1,\n    \"disclosed_quantity\": 0,\n    \"validity\": \"DAY\"\n    \"product\": \"MIS\",\n    \"order_side\": \"BUY\",\n    \"device\": \"WEB\",\n    \"execution_type\": \"CO\",\n    \"is_trailing\": True,\n    \"square_off_value\": 1,\n    \"stop_loss_value\": 12,\n    \"trailing_stop_loss\": \"0.05\",\n    \"trigger_price\": 0,\n    \"user_order_id\": 10002,\n})\n</code></pre>"},{"location":"orders/conditional_order/place_COorder/#response","title":"Response","text":"<pre><code>{\n    \"data\":{\n        \"data\":{\n            \"basket_id\": \"20210531-23\",\n            \"message\": \"basket Order Placed Successfully\"}\n        }\n        \"message\": \"Order place successfully\",\n        \"status\": \"success\"\n }\n</code></pre>"},{"location":"orders/conditional_order/place_COorder/#error-response","title":"Error Response","text":"<pre><code>{\n    \"data\": {},\n    \"error_code\": 44000,\n    \"message\": \"`product` is invalid\",\n    \"status\": \"error\"\n }\n</code></pre> Error Code Description 44000 In case of any of the parameter like <code>Exchange</code>,  <code>order_type</code>, <code>product</code> being invalid <code>or</code> order price is out of DPR range. 45000 In case of Invalid <code>Price</code> or <code>Quantity</code>. 45010 <code>Something Went Wrong</code> message occurs if you have given wrong instrument token"},{"location":"orders/gtt/cancel_gtt/","title":"Cancel GTT Order","text":""},{"location":"orders/gtt/cancel_gtt/#cancel-gtt-order","title":"Cancel GTT Order","text":"<pre><code> res = pocket.gttCancelRule(Parameters)\n</code></pre>"},{"location":"orders/gtt/cancel_gtt/#parameters","title":"Parameters","text":"<p>Takes the gttId which has to be deleted.</p>"},{"location":"orders/gtt/cancel_gtt/#response","title":"Response","text":"<pre><code>{\n    \"status\": true,\n    \"message\": \"SUCCESS\",\n    \"errorcode\": \"\",\n    \"data\": {\n        \"id\": \"e06f52ab-6cf4-492d-a014-c6e0e5843a93\"\n    }\n}\n</code></pre>"},{"location":"orders/gtt/cancel_gtt/#error-response","title":"Error response","text":"<p><code>json  {     \"data\": {},     \"error_code\": 45000,     \"message\": \"Error from backend: (500)-event id not found\",     \"status\": \"error\"  }</code></p>"},{"location":"orders/gtt/create_gtt/","title":"Create GTT Order","text":""},{"location":"orders/gtt/create_gtt/#create-gtt-rule","title":"Create GTT Rule","text":"<p>This method is used to place the gtt order. We can search the instrument and place order accordingly. Good Till Triggered is active until the trigger condition is met. The trigger is valid for a year. And whenever the price condition within this period is met, the order will be placed and executed, provided there are enough funds in the trading account, and the limit price order is filled on the exchange.</p> <pre><code>res = pocket.gttCreateRule(Parameters)\n</code></pre>"},{"location":"orders/gtt/create_gtt/#parameters","title":"Parameters","text":"Field Name Data Type Description action_type String Type of action for a single order <code>single_order</code> expiry_time String Represents a particular date of expiry <code>null</code> client_id String Represents the unique ID of a user or username. device String Device type: <code>Web</code>, <code>Mobile</code>. disclosed_quantity Number Quantity that can't be negative. exchange String Exchange: <code>NSE</code>, <code>BSE</code>, <code>NFO</code>, <code>CDS</code>, <code>MCX</code> instrument_token String Represents the unique ID of an instrument. market_protection_percentage String Market protection percentage, can be 0 order_side String Side of the order<code>BUY</code> or <code>SELL</code> order_type String Type of order<code>LIMIT</code>, <code>MARKET</code>, <code>SL</code>, <code>SLM</code> price Number Price of the order; can't be zero. product String Product type: <code>CNC</code>, <code>MIS</code>, <code>NRML</code> quantity Number Quantity of the order; can't be zero. sl_order_price Number Stop-loss order price; can't be zero. sl_order_quantity Number Stop-loss order quantity; can't be zero. sl_trigger_price Number Stop-loss trigger price; can't be zero. trigger_price Number Trigger price; can't be zero. user_order_id Number Represents the unique ID of the order."},{"location":"orders/gtt/create_gtt/#example","title":"Example","text":"<pre><code>data = obj.gttCreateRule(\n{\n\"action_type\": \"single_order\",\n\"expiry_time\": \"2024-12-12\",\n\"order\":{\n\"client_id\": \"HI0009\",\n\"disclosed_quantity\": 0,\n\"exchange\": \"NSE\",\n\"instrument_token\": \"14366\",\n\"market_protection_percentage\": 0,\n\"order_side\": \"BUY\",\n\"order_type\": \"LIMIT\",\n\"price\": 11.3,\n\"product\": \"CNC\",\n\"quantity\": 1,\n\"sl_order_price\": 0,\n\"sl_order_quantity\": 0,\n\"sl_trigger_price\": 0,\n\"trigger_price\": 13.6,\n\"user_order_id\": 122321\n}})\n</code></pre>"},{"location":"orders/gtt/create_gtt/#response","title":"Response","text":"<pre><code>{\"data\": {\"id\": \"ea036a20-2073-4bfb-a852-34662c4bd770\"}, \"message\": \"GTT created successfully\", \"status\": \"success\"}\n</code></pre>"},{"location":"orders/gtt/create_gtt/#error-response","title":"Error response","text":"<pre><code>{\n    \"data\": {},\n    \"error_code\": 44000,\n    \"message\": \"`order` `product` is invalid\",\n    \"status\": \"error\"\n}\n</code></pre>"},{"location":"orders/gtt/fetch_gtt/","title":"Fetch GTT Order","text":""},{"location":"orders/gtt/fetch_gtt/#fetch-gtt-order","title":"Fetch GTT Order","text":"<p>This method is used to fetch the details of the existing gtt orders. This method fetch details like action type, exchange,instrument token etc.</p> <pre><code>res = pocket.gttFetchRule()\n</code></pre>"},{"location":"orders/gtt/fetch_gtt/#example","title":"Example","text":"<p>response = pocket.gttFetchRule()</p>"},{"location":"orders/gtt/fetch_gtt/#response","title":"Response","text":"<pre><code>{\n    action_type: \"single_order\"\n    client_id: \"DEMO1\"\n    created_at: \"2021-10-17 18:14:01\"\n    expiry_time: \"2022-10-17\"\n    id: \"673a20c8-80d5-4a0c-8a34-23f20fe79661\"\n    login_id: \"DEMO1\"\n    order : {\n        disclosed_qty: 0\n        exchange: \"NSE\"\n        execution_type: \"\"\n        mode: \"NEW\"\n        order_side: \"BUY\"\n        order_type: \"LIMIT\"\n        price: 3611.5\n        pro_cli: \"CLIENT\"\n        prod_type: \"CNC\"\n        quantity: 1\n        segment: \"Capital\"\n        sl_order_price: 0\n        sl_order_quantity: 0\n        sl_trigger_price: 0\n        square_off_price: 0\n        token: 11536\n        trading_symbol: \"TCS-EQ\"\n        trailing_stop_loss: 0\n        trigger_price: 3611.45\n        validity: \"\"\n        vendor_code: \"00\"\n        reject_code: 0\n        reject_reason: \"\"\n        status: \"Active\"\n        type: \"GTTStock\"\n        updated_at: \"2021-10-17 18:18:12\"\n        message: \"\"\n        status: \"success\"\n    }\n\n}\n</code></pre>"},{"location":"orders/gtt/fetch_gtt/#error-response","title":"Error Response","text":"<pre><code>{\n    \"data\": {},\n    \"error_code\": 45000,\n    \"message\": \"Error from backend: (500)-no gtt data found\",\n    \"status\": \"error\"\n}\n</code></pre>"},{"location":"orders/gtt/modify_gtt/","title":"Modify GTT Order","text":""},{"location":"orders/gtt/modify_gtt/#modify-gtt-orders","title":"Modify GTT Orders","text":"<p>This method is used to modify the existing gtt orders. We can modify the price, trigger price etc.</p> <pre><code>res = pocket.gttModifyRule(Parameters)\n</code></pre>"},{"location":"orders/gtt/modify_gtt/#parameters","title":"Parameters","text":"Field Name Data Type Description expiry_time String Expiry time of the order (e.g., \"2024-12-12\") action_type String Type of action (e.g., \"single_order\") id String Unique identifier for the order order Object Object containing order details order.client_id String Client ID associated with the order order.device String Device used for placing the order (e.g., \"web\") order.disclosed_quantity Integer Disclosed quantity for the order order.exchange String Exchange where the order is placed (e.g., \"NSE\") order.instrument_token String Token representing the instrument order.market_protection_percentage Integer Market protection percentage order.order_side String Side of the order (e.g., \"BUY\") order.order_type String Type of order (e.g., \"LIMIT\") order.price Float Price per unit of the instrument order.product String Product code (e.g., \"CNC\") order.quantity Integer Quantity of the instrument order.sl_order_price Integer Stop-loss order price order.sl_order_quantity Integer Stop-loss order quantity order.sl_trigger_price Integer Stop-loss trigger price order.trigger_price Float Trigger price for the order order.user_order_id Integer User-defined order ID"},{"location":"orders/gtt/modify_gtt/#example","title":"Example","text":"<pre><code>data = obj.gttModifyRule({\n    \"expiry_time\": \"2024-12-12\",\n    \"action_type\":\"single_order\",\n    \"id\": \"ba1ff6e6-e164-4dcd-af5a-0b6f192147ed\",\n    \"order\": {\n        \"client_id\": \"HI0009\",\n        \"device\": \"web\",\n        \"disclosed_quantity\": 0,\n        \"exchange\": \"NSE\",\n        \"instrument_token\": \"14366\",\n        \"market_protection_percentage\": 0,\n        \"order_side\": \"BUY\",\n        \"order_type\": \"LIMIT\",\n        \"price\": 11.5,\n        \"product\": \"CNC\",\n        \"quantity\": 1,\n        \"sl_order_price\": 0,\n        \"sl_order_quantity\": 0,\n        \"sl_trigger_price\": 0,\n        \"trigger_price\": 13.5,\n        \"user_order_id\": 10002\n    }\n})\n\n</code></pre>"},{"location":"orders/gtt/modify_gtt/#response","title":"Response","text":"<pre><code>{\n    \"data\": {\n        \"id\": \"673a20c8-80d5-4a0c-8a34-23f20fe79661\"\n    },\n    \"message\": \"gtt request modified successfully\",\n    \"status\": \"success\"\n}\n</code></pre>"},{"location":"orders/gtt/modify_gtt/#error-response","title":"Error Response","text":"<pre><code>{\n    \"data\": {},\n    \"error_code\": 45000,\n    \"message\": \"Error from backend: (1600)-cannot modify, no data found with this id\",\n    \"status\": \"error\"\n}\n</code></pre>"},{"location":"orders/regular_order/cancel_regular_order/","title":"Cancel Regular Order","text":"<p>The Cancel Order API provides users with the capability to cancel open or pending order. To cancel a pending order within the order book, users simply need to provide the oms_order_id of the targeted order. Upon successful completion of the cancellation request, a <code>success</code> response status code will be returned, indicating the order's successful cancellation. This API streamlines the process of order management, empowering users to swiftly retract orders as needed, thereby enhancing flexibility and responsiveness in trading activities.</p> <pre><code>res = pocket.cancelOrder(Parameters)\nprint(res)\n</code></pre>"},{"location":"orders/regular_order/cancel_regular_order/#example","title":"Example","text":"<pre><code>data = obj.cancelOrder({\"oms_order_id\":\"202403111778\", \"client_id\": \"clintId\", \"execution_type\": \"REGULAR\"})\n</code></pre>"},{"location":"orders/regular_order/cancel_regular_order/#parameters","title":"Parameters","text":"FieldName Datatype Description oms_order_id <code>String</code> Represents the unique id of order given by oms. client_id <code>String</code> The unique ID of the user placing the order. execution_type <code>String</code> The execution type of the order, which is typically <code>REGULAR</code> for regular orders."},{"location":"orders/regular_order/cancel_regular_order/#response","title":"Response","text":"<pre><code>{\n    \"data\": {\n        \"oms_order_id\": \"202403111506\"\n    },\n    \"message\": \"Order cancellation request submitted for OMS Order: 202403111506\",\n    \"status\": \"success\"\n}\n</code></pre> Key Description oms_order_id Unique identifier for the OMS order. message Information message about the order cancellation request. status Status of the order cancellation request (e.g., success)."},{"location":"orders/regular_order/cancel_regular_order/#error-response","title":"Error Response","text":"<pre><code>{\n    \"status\": \"error\",\n    \"message\": \"Request Unauthorised\",\n    \"error_code\": 40000,\n    \"data\":{\n    }\n}\n</code></pre>"},{"location":"orders/regular_order/modify_regular_order/","title":"Modify Regular Order","text":"<p>The Modify Order API enables users to make changes in both open and pending orders within the order book. To execute a modification, users must provide the oms_order_id which can be obtained either from the order book or from the response of place order API. User can modify parameters like  price, quantity, order type, and validity. This API facilitates efficient management of orders by allowing users to tailor their orders to meet changing market conditions or trading strategies seamlessly.</p> <pre><code>res = pocket.modifyOrder(Parameters)\nprint(res)\n</code></pre>"},{"location":"orders/regular_order/modify_regular_order/#parameters","title":"Parameters","text":"FieldName Datatype Description exchange String <code>NSE</code>, <code>BSE</code>, <code>NFO</code>, <code>CDS</code>, <code>MCX</code> instrument_token String Represents the unique id of instrument. client_id String Represents the unique id of user order_type String <code>LIMIT</code>, <code>MARKET</code>, <code>SL</code>, <code>SLM</code> price Number If order_type is market, give value 0 else limit price quantity Number Total quantity of the instrument. disclosed_quantity Number hidden quantity from the market validity String <code>DAY</code> or <code>IOC</code> product String <code>CNC</code>, <code>MIS</code>, <code>NRML</code> oms_order_id Number Represents the unique id of order given by oms. trigger_price Number specified activation threshold, required in SL or SLM orders execution_type String <code>REGULAR</code>"},{"location":"orders/regular_order/modify_regular_order/#example-code","title":"Example Code","text":"<pre><code>data=obj.modifyOrder({\n    \"exchange\": \"NSE\",\n    \"instrument_token\": \"11915\",\n    \"client_id\": \"clientId\",\n    \"order_type\": \"LIMIT\",\n    \"price\": 13,\"quantity\": 3,\n    \"disclosed_quantity\": 0,\n    \"validity\": \"DAY\",\n    \"product\": \"CNC\",\n    \"order_side\": \"BUY\",\n    \"device\": \"WEB\",\n    \"user_order_id\": 1,\n    \"trigger_price\": 0,\n    \"oms_order_id\":\"202403111778\",\n    \"execution_type\": \"REGULAR\"\n    })\n</code></pre>"},{"location":"orders/regular_order/modify_regular_order/#response","title":"Response","text":"<pre><code>{\n    \"data\":{\n        \"oms_order_id\": \"202403111778\"\n    }\n    \"message\": \"Order modification request submitted\",\n    \"status\": \"success\"\n}\n</code></pre> Key Description oms_order_id The ID assigned to the order in the Order Management System. message A message indicating the result of the order placement. status The status of the operation (success/failure)."},{"location":"orders/regular_order/modify_regular_order/#error-response","title":"Error Response","text":"<pre><code>{\n    \"data\":{\n    }\n    \"error_code\": 45010,\n    \"message\": \"Something went wrong\",\n    \"status\": \"error\"\n}\n</code></pre>"},{"location":"orders/regular_order/place_regular_order/","title":"Place Regular Order","text":"<p>You can place a regular order with the placeOrder API. All the parameters that needs to be passed are listed below. An instrument token will be required to place the order, to get the instrument token you can download the given CSV file. To place a regular order, feed the execution_type parameter as 'REGULAR'.</p> <pre><code>order_res = pocket.placeOrder(Parameters)\nprint(order_res)\n</code></pre> FieldName Datatype Description exchange <code>String</code> Name of the exchange where the order is being placed. Possible values include <code>NSE</code>, <code>BSE</code>, <code>NFO</code>, <code>CDS</code>, <code>MCX</code>. instrument_token <code>String</code> The unique ID of the financial instrument. client_id <code>String</code> The unique ID of the user placing the order. order_type <code>String</code> The type of order being placed. Possible values are <code>LIMIT</code>, <code>MARKET</code>, <code>SL</code>, <code>SLM</code>. amo <code>Boolean</code> Indicates whether the order is an After Market Order (AMO). It can be either <code>TRUE</code> or <code>FALSE</code>. price <code>Number</code> The price at which the order should be executed. If <code>order_type</code> is <code>MARKET</code>, the value is <code>0</code>; otherwise, it's the limit price. quantity <code>Number</code> The total quantity of the financial instrument to be traded. disclosed_quantity <code>Number</code> The quantity of the order that is hidden from the market. validity <code>String</code> The validity of the order. Possible values are <code>DAY</code> (valid until the end of the trading day) or <code>IOC</code> (Immediate or Cancel). product <code>String</code> The type of product being traded. Possible values are <code>CNC</code> (Cash and Carry), <code>MIS</code> (Margin Intraday Square off), <code>NRML</code> (Normal). order_side <code>String</code> Indicates whether it's a buy or sell order. Possible values are <code>BUY</code> or <code>SELL</code>. device <code>String</code> The device from which the order is being placed. Possible values are <code>Web</code> or <code>Mobile</code>. user_order_id <code>Number</code> The unique order ID generated by the user. trigger_price <code>Number</code> The specified activation threshold for Stop Loss (SL) or Stop Loss Market (SLM) orders. execution_type <code>String</code> The execution type of the order, which is typically <code>REGULAR</code> for regular orders."},{"location":"orders/regular_order/place_regular_order/#example-code","title":"Example Code","text":"<pre><code>response = pocket.placeOrder({\n    \"exchange\": \"NSE\",\n    \"instrument_token\": \"14366\",\n    \"client_id\": \"clientId\",\n    \"order_type\": \"LIMIT\",\n    \"amo\": False,\n    \"price\": 13,\"quantity\": 1,\n    \"disclosed_quantity\": 0,\n    \"validity\": \"DAY\",\n    \"product\": \"CNC\",\n    \"order_side\": \"BUY\",\n    \"device\": \"WEB\",\n    \"user_order_id\": 1,\n    \"trigger_price\": 0,\n    \"execution_type\": \"REGULAR\"\n    })\n</code></pre>"},{"location":"orders/regular_order/place_regular_order/#response","title":"Response","text":"<pre><code>{\n    \"data\":\n    {\n       \"oms_order_id\": \"200018000000003\"\n    }\n    \"message\": \"Order place successfully\",\n    \"status\": \"success\"\n  }\n</code></pre> Key Description oms_order_id The ID assigned to the order in the Order Management System. message A message indicating the result of the order placement. status The status of the operation (success/failure)."},{"location":"orders/regular_order/place_regular_order/#error-responses","title":"Error Responses","text":"<p>In different scenarios, you can get different error responses, the error response will be like the below JSON example.</p> <pre><code>{\n    \"data\": {},\n    \"error_code\": 44000,\n    \"message\": \"`product` is invalid\",\n    \"status\": \"error\"\n}\n</code></pre> <p>Various error codes can be seen depending on the errors encountered within the code. Below are some of the defined error codes.</p> Error Code Description 44000 In case of any of the parameter like <code>Exchange</code>,  <code>order_type</code>, <code>product</code> being invalid 45000 In case of Invalid <code>Price</code> or <code>Quantity</code>. 45010 \"Something Went Wrong\" message occurs if you have given wrong instrument token"},{"location":"portfolio/convert_positions/","title":"Convert Position","text":""},{"location":"portfolio/convert_positions/#convert-positions","title":"Convert Positions","text":"<p>Use method convertPosition to make changes in existing positions.</p> <pre><code>pocket.convertPosition(Parameters)\n</code></pre>"},{"location":"portfolio/convert_positions/#parameters","title":"Parameters","text":"FieldName Datatype Description exchange String <code>NSE</code>, <code>BSE</code>, <code>NFO</code>, <code>CDS</code>, <code>MCX</code> instrument_token String Represents the unique id of instrument. client_id String Represents the unique id of user or username. order_side String <code>BUY</code>, <code>SELL</code> price Number It can't be Zero. quantity Number It can't be Zero. validity String <code>DAY</code> or <code>IOC</code> product String <code>CNC</code>, <code>MIS</code>, <code>NRML</code>, <code>MTF</code> new_product String <code>CNC</code>, <code>MIS</code>, <code>NRML</code>, <code>MTF</code> oms_order_id Number Represents the unique id of order given by oms."},{"location":"portfolio/convert_positions/#response","title":"Response","text":"<pre><code>{\n    \"data\": {},\n    \"message\": \"Conversion completed\",\n    \"status\": \"success\"\n}\n</code></pre>"},{"location":"portfolio/convert_positions/#error-response","title":"Error Response","text":"<pre><code>{\n    \"data\": {\n    },\n    \"error_code\": 45000,\n    \"message\": \"Error from backend: (1013)-template is not assigned for this client\",\n    \"status\": \"error\"\n}\n</code></pre>"},{"location":"portfolio/daywise_position/","title":"Fetch Position Daywise","text":""},{"location":"portfolio/daywise_position/#get-day-wise-position","title":"Get Day Wise Position","text":"<p>To get positions of the day, use getPositionDayWise method.</p> <pre><code>pocket.getPositionDayWise()\n</code></pre>"},{"location":"portfolio/daywise_position/#response","title":"Response","text":"<pre><code>{\n    \"data\": [\n    {\n       \"average_buy_price\": 14.7,\n       \"average_price\": 0,\n       \"average_sell_price\": 0,\n       \"buy_amount\": 14.7,\n       \"buy_quantity\": 1,\n       \"cf_buy_amount\": 0,\n       \"cf_buy_quantity\": 0,\n       \"cf_sell_amount\": 0,\n       \"cf_sell_quantity\": 0,\n       \"client_id\": \"DEMO1\",\n       \"close_price\": 0,\n       \"exchange\": \"NSE\",\n       \"instrument_token\": 11915,\n       \"ltp\": 14.6,\n       \"multiplier\": 1,\n       \"net_amount\": -14.7,\n       \"net_quantity\": 1,\n       \"previous_close\": 14.65,\n       \"pro_cli\": \"CLIENT\",\n       \"prod_type\": 2,\n       \"product\": \"MIS\",\n       \"realized_mtm\": 0,\n       \"segment\": \"Capital\",\n       \"sell_amount\": 0,\n       \"sell_quantity\": 0,\n       \"symbol\": \"YESBANK\",\n       \"token\": 11915,\n       \"trading_symbol\": \"YESBANK-EQ\",\n       \"v_login_id\": \"DEMO1\"\n    }]\n    \"message\": \"\",\n    \"status\": \"success\"\n   }\n</code></pre>"},{"location":"portfolio/daywise_position/#error-response","title":"Error Response","text":"<pre><code>{\n  \"status\": \"error\",\n  \"message\": \"Request forbidden\",\n  \"error_code\": 40000,\n  \"data\":{\n  }\n}\n</code></pre>"},{"location":"portfolio/demat_holding/","title":"Fetch Demat Holdings","text":""},{"location":"portfolio/demat_holding/#get-demat-holdings","title":"Get Demat Holdings","text":"<p>To get alll the demat holdings, use the getDematHoldings method</p> <pre><code>res = pocket.getDemateHoldings()\n</code></pre>"},{"location":"portfolio/demat_holding/#response","title":"Response","text":"<pre><code>{\n  \"data\":{\n  \"holdings\": [\n    {\n    \"branch_code\": \"\",\n    \"buy_avg\": 240.2,\n    \"buy_avg_mtm\": 277.7500000000006,\n    \"client_id\": \"DEMO1\",\n    \"exchange\": \"NSE\",\n    \"free_quantity\": 55,\n    \"instrument_details\":{\n    \"exchange\": 1,\n    \"instrument_name\": \"EQ\",\n    \"instrument_token\": 3045,\n    \"trading_symbol\": \"SBIN-EQ\"\n    }\n    \"isin\": \"INE062A01020\",\n    \"ltp\": 245.25,\n    \"pending_quantity\": 0,\n    \"pledge_quantity\": 0,\n    \"previous_close\": 240.2,\n    \"quantity\": 55,\n    \"symbol\": \"SBIN\",\n    \"t0_price\": 0,\n    \"t0_quantity\": 0,\n    \"t1_price\": 0,\n    \"t1_quantity\": 0,\n    \"t2_price\": 0,\n    \"t2_quantity\": 0,\n    \"today_pledge_quantity\": 0,\n    \"token\": 3045,\n    \"trading_symbol\": \"SBIN\",\n    \"transaction_type\": \"\",\n    \"used_quantity\": 0\n    }]\n  }\n  \"message\": \"\",\n  \"status\": \"success\"\n }\n ```\n\n | Key                     | Description                                                                                                                                         |\n|-------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------|\n| actual_buy_avg          | The actual average buying price for the instrument.                                                                                                 |\n| branch_code             | The branch code associated with the client.                                                                                                         |\n| buy_avg                 | The average buying price for the instrument.                                                                                                         |\n| buy_avg_mtm             | The average buying price for the instrument on mark-to-market basis.                                                                                  |\n| client_id               | The unique identifier of the client.                                                                                                                 |\n| exchange                | The exchange where the instrument is traded.                                                                                                         |\n| free_quantity           | The quantity of the instrument available for trading without any restrictions.                                                                       |\n| instrument_details      | Details about the instrument, including exchange, instrument name, token, and trading symbol.                                                        |\n| isin                    | The International Securities Identification Number (ISIN) of the instrument.                                                                          |\n| ltp                     | The last traded price of the instrument.                                                                                                              |\n| net_holding_quantity    | The net holding quantity of the instrument.                                                                                                           |\n| pending_quantity        | The quantity of pending orders for the instrument.                                                                                                    |\n| pledge_allow            | Indicates whether pledging is allowed for the instrument.                                                                                             |\n| pledge_quantity         | The quantity of the instrument pledged.                                                                                                               |\n| previous_close          | The previous closing price of the instrument.                                                                                                         |\n| quantity                | The total quantity of the instrument.                                                                                                                 |\n| symbol                  | The symbol or ticker of the instrument.                                                                                                               |\n| t0_price                | The price at T0 (previous trading day).                                                                                                              |\n| t0_quantity             | The quantity at T0 (previous trading day).                                                                                                           |\n| t1_price                | The price at T1 (two trading days ago).                                                                                                              |\n| t1_quantity             | The quantity at T1 (two trading days ago).                                                                                                           |\n| t2_price                | The price at T2 (three trading days ago).                                                                                                            |\n| t2_quantity             | The quantity at T2 (three trading days ago).                                                                                                         |\n| today_pledge_quantity   | The quantity of the instrument pledged today.                                                                                                         |\n| today_unpledge_quantity | The quantity of the instrument unpledged today.                                                                                                       |\n| token                   | The unique token or identifier of the instrument.                                                                                                     |\n| trading_symbol          | The trading symbol of the instrument.                                                                                                                 |\n| transaction_type        | The type of transaction (if applicable).                                                                                                              |\n| used_quantity           | The quantity of the instrument used in transactions.                                                                                                  |\n\n\n### Error Response\n```json\n{\n    \"data\":{\n    }\n    \"error_code\": 44000,\n    \"message\": \"`type` is invalid\",\n    \"status\": \"error\"\n}\n</code></pre>"},{"location":"portfolio/netwise_position/","title":"Fetch Position Netwise","text":""},{"location":"portfolio/netwise_position/#get-net-position","title":"Get Net Position","text":"<p>Use the method getPositionNetWise to get the net positions.</p> <pre><code>pocket.getPositionNetWise()\n</code></pre>"},{"location":"portfolio/netwise_position/#response","title":"Response","text":"<pre><code> {\n     \"data\": [\n     {     \n     \"average_buy_price\": 40520,\n     \"average_price\": 0,\n     \"average_sell_price\": 40538,\n     \"buy_amount\": 40520,\n     \"buy_quantity\": 1,\n     \"cf_buy_amount\": 0,\n     \"cf_buy_quantity\": 0,\n     \"cf_sell_amount\": 0,\n     \"cf_sell_quantity\": 0,\n     \"client_id\": \"DEMO1\",\n     \"close_price\": 0,\n     \"exchange\": \"MCX\",\n     \"instrument_token\": 222895,\n     \"ltp\": 40520,\n     \"multiplier\": 1,\n     \"net_amount\": 18,\n     \"net_quantity\": 0,\n     \"previous_close\": 40697,\n     \"pro_cli\": \"CLIENT\",\n     \"prod_type\": 0,\n     \"product\": \"NRML\",\n     \"realized_mtm\": 0,\n     \"segment\": \"FutOpt\",\n     \"sell_amount\": 40538,\n     \"sell_quantity\": 1,\n     \"symbol\": \"GOLDGUINEA\",\n     \"token\": 222895,\n     \"trading_symbol\": \"GOLDGUINEA20NOVFUT\",\n     \"v_login_id\": \"DEMO1\"\n     }]\n     \"message\": \"\",\n     \"status\": \"success\"\n  }\n</code></pre>"},{"location":"portfolio/netwise_position/#error-response","title":"Error Response","text":"<pre><code>{\n    \"data\":{\n    }\n    \"error_code\": 44000,\n    \"message\": \"`type` is invalid\",\n    \"status\": \"error\"\n}\n</code></pre>"},{"location":"websockets/basic/","title":"Live Data and Websockets","text":""},{"location":"websockets/basic/#live-market-data","title":"Live Market Data","text":"<p>Live market feeds play a vital role in the share market by facilitating informed decision-making, identifying opportunities, managing risks, enabling algorithmic trading, facilitating information flow, and providing a competitive edge to market participants. Access to real-time market data is essential for investors seeking to navigate the complexities of the stock market and achieve their investment objectives. Some detailed points which explains the importance of live market feed are</p> <p>Timely Decision Making: In the fast-paced environment of the stock market, every second counts. Live market feeds provide real-time updates on stock prices, market trends, and news, allowing investors to make timely decisions. Whether buying, selling, or holding positions, having access to up-to-the-second information helps investors react swiftly to market changes.</p> <p>Opportunity Identification: Live market feeds enable investors to identify opportunities quickly. By monitoring live price movements, volume, and order book data, investors can spot emerging trends, volatility, and trading opportunities. This information empowers investors to capitalize on favorable market conditions or adjust their strategies in response to changing market dynamics.</p> <p>Risk Management: Real-time market data aids in risk management by providing insights into market sentiment and potential risks. Investors can monitor factors such as price fluctuations, trading volumes, and news events to assess and mitigate risks associated with their investments. Additionally, live market feeds facilitate the implementation of stop-loss orders and other risk management strategies to protect investment portfolios.</p> <p>Algorithmic Trading: Live market data is essential for algorithmic trading strategies, where automated systems execute trades based on predefined rules and market conditions. These algorithms rely on real-time data to analyze market trends, execute trades, and manage positions efficiently. High-frequency trading, arbitrage, and other algorithmic strategies heavily depend on live market feeds to achieve optimal performance.</p> <p>Information Flow: Live market feeds serve as a conduit for disseminating critical information to market participants. From corporate announcements and economic indicators to geopolitical events and regulatory changes, real-time market data provides investors with the latest information that may impact stock prices and overall market sentiment. Access to timely information fosters transparency and enhances market efficiency.</p> <p>Competitive Edge: In today's highly competitive financial markets, having access to live market feeds can provide a competitive edge. Traders and investors who can react swiftly to market developments and make informed decisions based on real-time data are better positioned to capitalize on opportunities and navigate market fluctuations successfully.</p> <p>In summary, live market feeds play a vital role in the share market by facilitating informed decision-making, identifying opportunities, managing risks, enabling algorithmic trading, facilitating information flow, and providing a competitive edge to market participants. Access to real-time market data is essential for investors seeking to navigate the complexities of the stock market and achieve their investment objectives.</p> <p>Websockets are a communication protocol that provides full-duplex communication channels over a single, long-lived TCP connection. This protocol enables real-time data transfer between a client and a server, allowing them to exchange messages in both directions simultaneously. Unlike traditional HTTP connections, which follow a request-response model and require separate connections for each request, Websockets establish a persistent connection that remains open as long as needed.</p> <p>In contrast to HTTP, where a client initiates communication by sending a request to a server and waits for a response, Websockets allow for bidirectional communication. This means that once the connection is established, either the client or the server can initiate the exchange of data at any time without waiting for a request. This capability is particularly useful for applications that require real-time updates or interactive communication, such as chat applications, online gaming, financial trading platforms, and live data streaming services.</p> <p>The process of establishing a connection in Websockets involves a handshake mechanism. Initially, the client sends an HTTP request to the server, indicating its intent to upgrade the connection to a WebSocket connection. If the server supports Websockets, it responds with an HTTP 101 status code (Switching Protocols) along with the necessary headers to indicate the protocol upgrade. Subsequently, the connection transitions from the HTTP protocol to the WebSocket protocol, and both the client and server can start exchanging messages in a full-duplex manner. This handshake process typically occurs during the initial connection establishment and allows for seamless transition to the WebSocket protocol, enabling efficient real-time communication between the client and server.</p>"},{"location":"websockets/compact_marketdata/","title":"Compact Marketdata","text":"<p>To get the compact marketdata, the first step is to subscribe the instrument for which we need the data.</p>"},{"location":"websockets/compact_marketdata/#subscribe-instruments-to-get-market-data","title":"Subscribe instruments to get market data","text":"<p>You can subscribe or unsubscribe single or multiple instruments to get market data.</p> <p>To subscribe only one instrument.</p> <pre><code>marketdata_payload= {'exchangeCode': 1, 'instrumentToken': 'token'}\nresponse = pocket_ws.subscribe_compact_marketdata(marketdata_payload)\n</code></pre> <p>To subscribe multiple instrument.</p> <pre><code>multiple_marketdata_payload = {}\nresponse = pocket_ws.subscribe_multiple_compact_marketdata(marketdata_payload)\n</code></pre>"},{"location":"websockets/compact_marketdata/#example","title":"Example","text":"<pre><code>marketdata_payload= {'exchangeCode': 2, 'instrumentToken': '41990'}\nresponse = pocket_ws.subscribe_compact_marketdata(marketdata_payload)\n</code></pre>"},{"location":"websockets/compact_marketdata/#read-marketdata","title":"Read Marketdata","text":"<pre><code>compact_market_data = pocket_ws.read_compact_marketdata()\nprint(compact_market_data)\n</code></pre> <pre><code>compact_market_data = pocket_ws.read_multiple_compact_marketdata()\nprint(compact_market_data)\n</code></pre>"},{"location":"websockets/compact_marketdata/#compact-marketdata-response","title":"compact Marketdata Response","text":"<pre><code>{\n  \"mode\": 2,\n  \"exchange_code\": 1,\n  \"instrument_token\": 1333,\n  \"last_traded_price\": 145065,\n  \"change\": 4294966816,\n  \"last_traded_time\": 1710491906,\n  \"lowDPR\": 130990,\n  \"highDPR\": 160095,\n  \"currentOpenInterest\": 0,\n  \"initialOpenInterest\": 0,\n  \"bidPrice\": 145060,\n  \"askPrice\": 145070\n}\n</code></pre>"},{"location":"websockets/compact_marketdata/#unsubscribe-the-instrument-to-stop-receiving-the-data","title":"Unsubscribe the instrument to stop receiving the data.","text":"<pre><code>response = pocket_ws.unsubscribe_compact_marketdata(marketdata_payload)\n</code></pre> <pre><code>response = pocket_ws.unsubscribe_multiple_compact_marketdata(marketdata_payload)\n</code></pre>"},{"location":"websockets/connecting_websocket/","title":"Connecting websocket","text":"<p>Follow the below steps to connect to establish a connection with websocket.</p> <p>First import the pacefinwebsocket library</p> <pre><code>from pacefinwebsocket import PacefinSocket\n</code></pre> <p>Then create an instance of class pacefinsocket through which all methods can be passed.</p> <pre><code>pocket_ws = PacefinSocket(pace_clientId, access_token)\n</code></pre> <p>Then call the method run_socket to establish a connection</p> <pre><code>ws_status = pocket_ws.run_socket()\n</code></pre>"},{"location":"websockets/detailed_marketdata/","title":"Detailed Marketdata","text":"<p>To get the detailed marketdata, the first step is to subscribe the instrument for which we need the data.</p> <p>Below is the list of exchange codes which will be required while subscribing to a particular instrument.</p> <pre><code>exchange_code = {\n    \"NSE\" : 1,\n    \"NFO\" : 2,\n    \"CDS\" : 3,\n    \"MCX\" : 4,\n    \"BSE\" : 6,\n    \"BFO\" : 7\n}\n</code></pre>"},{"location":"websockets/detailed_marketdata/#subscribe-instruments-to-get-market-data","title":"Subscribe instruments to get market data","text":"<p>You can subscribe or unsubscribe single or multiple instruments to get market data.</p> <p>To subscribe only one instrument.</p> <pre><code>marketdata_payload= {'exchangeCode': 'code', 'instrumentToken': 'token'}\nresponse = pocket_ws.subscribe_detailed_marketdata(marketdata_payload)\n</code></pre> <p>To subscribe multiple instrument.</p> <pre><code>multiple_marketdata_payload = [{'exchangeCode': 'code', 'instrumentToken': 'token'},{'exchangeCode': 'code', 'instrumentToken': 'token'}.....]\nresponse = pocket_ws.subscribe_multiple_detailed_marketdata(marketdata_payload)\n</code></pre>"},{"location":"websockets/detailed_marketdata/#example","title":"Example","text":"<pre><code>marketdata_payload= {'exchangeCode': 1, 'instrumentToken': 1333}\nresponse = pocket_ws.subscribe_detailed_marketdata(marketdata_payload)\n</code></pre>"},{"location":"websockets/detailed_marketdata/#read-marketdata","title":"Read Marketdata","text":"<pre><code>detailed_market_data = pocket_ws.read_detailed_marketdata()\nprint(detailed_market_data)\n</code></pre> <pre><code>detailed_market_data = pocket_ws.read_multiple_detailed_marketdata()\nprint(detailed_market_data)\n</code></pre>"},{"location":"websockets/detailed_marketdata/#detailed-marketdata-response","title":"Detailed Marketdata Response","text":"<pre><code>{\n  \"mode\": 1,\n  \"exchange_code\": 1,\n  \"instrument_token\": 1333,\n  \"last_traded_price\": 144895,\n  \"last_traded_time\": 1710489044,\n  \"last_traded_quantity\": 1,\n  \"trade_volume\": 8014246,\n  \"best_bid_price\": 144890,\n  \"best_bid_quantity\": 25,\n  \"best_ask_price\": 144895,\n  \"best_ask_quantity\": 628,\n  \"total_buy_quantity\": 624983,\n  \"total_sell_quantity\": 899665,\n  \"average_trade_price\": 145018,\n  \"exchange_timestamp\": 1710489044,\n  \"open_price\": 145000,\n  \"high_price\": 145930,\n  \"low_price\": 144415,\n  \"close_price\": 145545,\n  \"yearly_high_price\": 175750,\n  \"yearly_low_price\": 136355,\n  \"lowDPR\": 130990,\n  \"highDPR\": 160095,\n  \"currentOpenInterest\": 0,\n  \"initialOpenInterest\": 0\n}\n</code></pre>"},{"location":"websockets/detailed_marketdata/#unsubscribe-the-instrument-to-stop-receiving-the-data","title":"Unsubscribe the instrument to stop receiving the data.","text":"<pre><code>response = pocket_ws.unsubscribe_detailed_marketdata(marketdata_payload)\n</code></pre> <pre><code>response = pocket_ws.unsubscribe_multiple_detailed_marketdata(marketdata_payload)\n</code></pre>"},{"location":"websockets/snapquote_data/","title":"Snapquote Data","text":"<p>To get the snapquote data, the first step is to subscribe the instrument for which we need the data.</p> <p>Below is the list of exchange codes which will be required while subscribing to a particular instrument.</p> <pre><code>exchange_code = {\n    \"NSE\" : 1,\n    \"NFO\" : 2,\n    \"CDS\" : 3,\n    \"MCX\" : 4,\n    \"BSE\" : 6,\n    \"BFO\" : 7\n}\n</code></pre>"},{"location":"websockets/snapquote_data/#subscribe-instruments-to-get-market-data","title":"Subscribe instruments to get market data","text":"<p>You can subscribe or unsubscribe single or multiple instruments to get market data.</p> <p>To subscribe only one instrument.</p> <pre><code>snapquotedata_payload= {'exchangeCode': 1, 'instrumentToken': 'token'}\nresponse = pocket_ws.subscribe_snapquote_data(snapquotedata_payload)\n</code></pre> <p>To subscribe multiple instrument.</p> <pre><code>multiple_snapquotedata_payload = {}\nresponse = pocket_ws.subscribe_multiple_snapquote_data(snapquotedata_payload)\n</code></pre>"},{"location":"websockets/snapquote_data/#example","title":"Example","text":"<pre><code>snapquotedata_payload= {'exchangeCode': 1, 'instrumentToken': 1333}\nresponse = pocket_ws.subscribe_snapquote_data(snapquotedata_payload)\n</code></pre>"},{"location":"websockets/snapquote_data/#read-data","title":"Read Data","text":"<pre><code>snapquote_data = pocket_ws.read_snapquote_data()\nprint(snapquote_market_data)\n</code></pre> <pre><code>snapquote_data = pocket_ws.read_multiple_snapquote_data()\nprint(snapquote_market_data)\n</code></pre>"},{"location":"websockets/snapquote_data/#snapquote-response","title":"Snapquote Response","text":"<pre><code>{\n  \"mode\": 4,\n  \"exchange_code\": 1,\n  \"instrument_token\": 1333,\n  \"buyers\": [\n    3,\n    3,\n    1,\n    2,\n    6\n  ],\n  \"bidPrices\": [\n    145100,\n    145095,\n    145090,\n    145085,\n    145080\n  ],\n  \"bidQtys\": [\n    121,\n    53,\n    64,\n    76,\n    130\n  ],\n  \"sellers\": [\n    1,\n    4,\n    1,\n    3,\n    4\n  ],\n  \"askPrices\": [\n    145110,\n    145135,\n    145140,\n    145145,\n    145150\n  ],\n  \"askQtys\": [\n    33,\n    441,\n    68,\n    113,\n    324\n  ],\n  \"averageTradePrice\": 145026,\n  \"open\": 145000,\n  \"high\": 145930,\n  \"low\": 144415,\n  \"close\": 145545,\n  \"totalBuyQty\": 653906,\n  \"totalSellQty\": 870361,\n  \"volume\": 9438681\n}\n</code></pre>"},{"location":"websockets/snapquote_data/#unsubscribe-the-instrument-to-stop-receiving-the-data","title":"Unsubscribe the instrument to stop receiving the data.","text":"<pre><code>response = pocket_ws.unsubscribe_snapquote_data(snapquotedata_payload)\n</code></pre> <pre><code>response = pocket_ws.unsubscribe_multiple_snapquote_data(snapquote_payload)\n</code></pre>"}]}